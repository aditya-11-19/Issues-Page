const dummyData = [
    {
        "url": "https://api.github.com/repos/facebook/react/issues/25464",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25464/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25464/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25464/events",
        "html_url": "https://github.com/facebook/react/pull/25464",
        "id": 1404750775,
        "node_id": "PR_kwDOAJy2Ks5Ak6Ni",
        "number": 25464,
        "title": "Fix flow suppressions in DOMProperty",
        "user": {
          "login": "kassens",
          "id": 11849,
          "node_id": "MDQ6VXNlcjExODQ5",
          "avatar_url": "https://avatars.githubusercontent.com/u/11849?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/kassens",
          "html_url": "https://github.com/kassens",
          "followers_url": "https://api.github.com/users/kassens/followers",
          "following_url": "https://api.github.com/users/kassens/following{/other_user}",
          "gists_url": "https://api.github.com/users/kassens/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/kassens/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/kassens/subscriptions",
          "organizations_url": "https://api.github.com/users/kassens/orgs",
          "repos_url": "https://api.github.com/users/kassens/repos",
          "events_url": "https://api.github.com/users/kassens/events{/privacy}",
          "received_events_url": "https://api.github.com/users/kassens/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 196858374,
            "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
            "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
            "name": "CLA Signed",
            "color": "e7e7e7",
            "default": false,
            "description": null
          },
          {
            "id": 1775958285,
            "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
            "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
            "name": "React Core Team",
            "color": "9149d1",
            "default": false,
            "description": "Opened by a member of the React Core Team"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-10-11T14:31:31Z",
        "updated_at": "2022-10-11T14:32:22Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
          "url": "https://api.github.com/repos/facebook/react/pulls/25464",
          "html_url": "https://github.com/facebook/react/pull/25464",
          "diff_url": "https://github.com/facebook/react/pull/25464.diff",
          "patch_url": "https://github.com/facebook/react/pull/25464.patch",
          "merged_at": null
        },
        "body": "Replaces the function constructor call with a factory method. This makes this covered by Flow.\r\n\r\nI think if an object is created from a literal in one place it should always have the same hidden class, but I'm curious if I'm missing something here why this should be a `new` call.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25464/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25464/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25462",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25462/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25462/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25462/events",
        "html_url": "https://github.com/facebook/react/issues/25462",
        "id": 1404540014,
        "node_id": "I_kwDOAJy2Ks5Tt5Ru",
        "number": 25462,
        "title": "Bug: <div> stops scrolling using keyboard arrows when tabIndex is specified for the onKeyDown event to work",
        "user": {
          "login": "holem",
          "id": 159443,
          "node_id": "MDQ6VXNlcjE1OTQ0Mw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/159443?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/holem",
          "html_url": "https://github.com/holem",
          "followers_url": "https://api.github.com/users/holem/followers",
          "following_url": "https://api.github.com/users/holem/following{/other_user}",
          "gists_url": "https://api.github.com/users/holem/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/holem/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/holem/subscriptions",
          "organizations_url": "https://api.github.com/users/holem/orgs",
          "repos_url": "https://api.github.com/users/holem/repos",
          "events_url": "https://api.github.com/users/holem/events{/privacy}",
          "received_events_url": "https://api.github.com/users/holem/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-10-11T12:17:54Z",
        "updated_at": "2022-10-11T14:22:52Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi everyone. \r\n\r\nThere is one `div` that is always wider than the page have available space for it. It is placed in a container with `overflow-x: visible`, which in turn is placed in a flex container. So, with this layout, if you click on this `div` and then press the left-right arrows on the keyboard, the container will scroll. This is the expected behavior (at least in Chrome and Edge, but for some reason not in Firefox).\r\n\r\nNow I need to add an `onKeyDown` event handler to change the contents of the `div` when certain buttons on the keyboard are pressed (including left-right arrows). In order for the `onKeyDown` event to work, you need to add `tabIndex=0` for this block. But when I have the `tabIndex` added, the container stopped scrolling when the right-left arrows are pressed. And this is not the expected behavior. I expect that scrolling the container with the left-right arrows from the keyboard will continue to work even if we started listening for keystroke events.\r\n\r\nProbably, `event.preventDefault()` should be called to cancel this scrolling effect, but in this particular case I'm not calling this function.\r\n\r\nReact version: 18.2\r\n\r\n## Steps To Reproduce\r\n\r\nHere is the code on CodeSandbox that demonstrates the problem: \r\nhttps://codesandbox.io/s/onkeydown-arrow-scroll-problem-97e00l\r\n\r\n## The current behavior\r\n\r\nWhen `tabIndex` is specified, scrolling the `div` element using the left-right arrows from the keyboard stops.\r\n\r\n## The expected behavior\r\n\r\nAdding a `tabIndex` property and/or `onKeyDown` event handler should not affect the `div` scroll control capabilities. So the `div` should scroll with left-right arrows.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25462/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25462/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25460",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25460/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25460/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25460/events",
        "html_url": "https://github.com/facebook/react/pull/25460",
        "id": 1403845693,
        "node_id": "PR_kwDOAJy2Ks5Ah5Mk",
        "number": 25460,
        "title": "Separate EventPriority from Lane",
        "user": {
          "login": "tyao1",
          "id": 5868353,
          "node_id": "MDQ6VXNlcjU4NjgzNTM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5868353?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/tyao1",
          "html_url": "https://github.com/tyao1",
          "followers_url": "https://api.github.com/users/tyao1/followers",
          "following_url": "https://api.github.com/users/tyao1/following{/other_user}",
          "gists_url": "https://api.github.com/users/tyao1/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/tyao1/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/tyao1/subscriptions",
          "organizations_url": "https://api.github.com/users/tyao1/orgs",
          "repos_url": "https://api.github.com/users/tyao1/repos",
          "events_url": "https://api.github.com/users/tyao1/events{/privacy}",
          "received_events_url": "https://api.github.com/users/tyao1/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 196858374,
            "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
            "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
            "name": "CLA Signed",
            "color": "e7e7e7",
            "default": false,
            "description": null
          },
          {
            "id": 1775958285,
            "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
            "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
            "name": "React Core Team",
            "color": "9149d1",
            "default": false,
            "description": "Opened by a member of the React Core Team"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-10-11T00:33:00Z",
        "updated_at": "2022-10-11T00:33:10Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
          "url": "https://api.github.com/repos/facebook/react/pulls/25460",
          "html_url": "https://github.com/facebook/react/pull/25460",
          "diff_url": "https://github.com/facebook/react/pull/25460.diff",
          "patch_url": "https://github.com/facebook/react/pull/25460.patch",
          "merged_at": null
        },
        "body": "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test --prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\nBreaks down #25438, we are going to merge Default and Continuous lane into Sync lane, so EventPriority no longer maps to Lane  anymore. \r\n\r\n## How did you test this change?\r\n\r\n<!--\r\n  Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface.\r\n  How exactly did you verify that your PR solves the issue you wanted to solve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\r\nyarn test\r\nflow\r\nlint",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25460/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25460/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25459",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25459/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25459/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25459/events",
        "html_url": "https://github.com/facebook/react/pull/25459",
        "id": 1403763846,
        "node_id": "PR_kwDOAJy2Ks5AhnvT",
        "number": 25459,
        "title": "Add IIFE bundle for SSR instruction streaming runtime",
        "user": {
          "login": "mofeiZ",
          "id": 34200447,
          "node_id": "MDQ6VXNlcjM0MjAwNDQ3",
          "avatar_url": "https://avatars.githubusercontent.com/u/34200447?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/mofeiZ",
          "html_url": "https://github.com/mofeiZ",
          "followers_url": "https://api.github.com/users/mofeiZ/followers",
          "following_url": "https://api.github.com/users/mofeiZ/following{/other_user}",
          "gists_url": "https://api.github.com/users/mofeiZ/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/mofeiZ/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/mofeiZ/subscriptions",
          "organizations_url": "https://api.github.com/users/mofeiZ/orgs",
          "repos_url": "https://api.github.com/users/mofeiZ/repos",
          "events_url": "https://api.github.com/users/mofeiZ/events{/privacy}",
          "received_events_url": "https://api.github.com/users/mofeiZ/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 196858374,
            "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
            "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
            "name": "CLA Signed",
            "color": "e7e7e7",
            "default": false,
            "description": null
          },
          {
            "id": 1775958285,
            "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
            "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
            "name": "React Core Team",
            "color": "9149d1",
            "default": false,
            "description": "Opened by a member of the React Core Team"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-10-10T22:16:08Z",
        "updated_at": "2022-10-10T23:02:42Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
          "url": "https://api.github.com/repos/facebook/react/pulls/25459",
          "html_url": "https://github.com/facebook/react/pull/25459",
          "diff_url": "https://github.com/facebook/react/pull/25459.diff",
          "patch_url": "https://github.com/facebook/react/pull/25459.patch",
          "merged_at": null
        },
        "body": "(Loosely followed #25436 to find what changes to make)\r\n\r\nWe're adding an option to Fizz to support an alternate output format that doesn't rely on inline script tags (see #25437). Part of this change involves publishing a minimal client runtime to observe and process SSR instructions.\r\n\r\nThis PR adds a new bundle \"instruction-streaming-runtime\", which will be compiled to an IIFE. \r\n- `instruction-streaming-runtime` will be published by React and be a standalone script that installs this minimal client runtime\r\n- #25437 will require a `runtimeSrc` param if the `enableFizzNoScriptExecution` is toggled (in SSR entrypoints params). We expect clients to pass a url to the `instruction-streaming-runtime` bundle here.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25459/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25459/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25458",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25458/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25458/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25458/events",
        "html_url": "https://github.com/facebook/react/issues/25458",
        "id": 1403496479,
        "node_id": "I_kwDOAJy2Ks5Tp6gf",
        "number": 25458,
        "title": "Bug: In StrictMode callback refs are called once",
        "user": {
          "login": "domarmstrong",
          "id": 1533249,
          "node_id": "MDQ6VXNlcjE1MzMyNDk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1533249?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/domarmstrong",
          "html_url": "https://github.com/domarmstrong",
          "followers_url": "https://api.github.com/users/domarmstrong/followers",
          "following_url": "https://api.github.com/users/domarmstrong/following{/other_user}",
          "gists_url": "https://api.github.com/users/domarmstrong/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/domarmstrong/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/domarmstrong/subscriptions",
          "organizations_url": "https://api.github.com/users/domarmstrong/orgs",
          "repos_url": "https://api.github.com/users/domarmstrong/repos",
          "events_url": "https://api.github.com/users/domarmstrong/events{/privacy}",
          "received_events_url": "https://api.github.com/users/domarmstrong/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-10-10T17:23:09Z",
        "updated_at": "2022-10-10T17:23:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi. I'm running in to an issue in StrictMode with the fact that React is calling effects multiple times but then is only calling ref callbacks once. I believe this could be related to (if not the same issue as) https://github.com/facebook/react/issues/24670.\r\n\r\nReact version: 18.2.0\r\n\r\n## Steps To Reproduce\r\n\r\nThe code is contrived but it shows how it can introduce confusion.\r\n\r\nhttps://codesandbox.io/s/react-18-playground-forked-b3ql27?file=/src/App.tsx\r\n\r\n## The current behavior\r\n\r\nCallback refs are only called once even though effect cleanup is called on mount.\r\n\r\n## The expected behavior\r\n\r\nCallback refs are called again on simulated re-mount.\r\n\r\n\r\nUnfortunately dealing with StrictMode so far has not been a very nice DX. It seems to have added a whole additional cognitive overhead. It also seems to raise all sorts of very opaque bugs that take a bit of working through often without obvious solutions. Although I understand the reasoning it feels like a loaded footgun.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25458/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25458/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25457",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25457/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25457/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25457/events",
        "html_url": "https://github.com/facebook/react/pull/25457",
        "id": 1403415304,
        "node_id": "PR_kwDOAJy2Ks5AgcwX",
        "number": 25457,
        "title": "Extract Fizz instruction set to build macro",
        "user": {
          "login": "acdlite",
          "id": 3624098,
          "node_id": "MDQ6VXNlcjM2MjQwOTg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/acdlite",
          "html_url": "https://github.com/acdlite",
          "followers_url": "https://api.github.com/users/acdlite/followers",
          "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
          "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
          "organizations_url": "https://api.github.com/users/acdlite/orgs",
          "repos_url": "https://api.github.com/users/acdlite/repos",
          "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
          "received_events_url": "https://api.github.com/users/acdlite/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 196858374,
            "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
            "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
            "name": "CLA Signed",
            "color": "e7e7e7",
            "default": false,
            "description": null
          },
          {
            "id": 1775958285,
            "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
            "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
            "name": "React Core Team",
            "color": "9149d1",
            "default": false,
            "description": "Opened by a member of the React Core Team"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2022-10-10T16:12:01Z",
        "updated_at": "2022-10-10T20:58:15Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
          "url": "https://api.github.com/repos/facebook/react/pulls/25457",
          "html_url": "https://github.com/facebook/react/pull/25457",
          "diff_url": "https://github.com/facebook/react/pull/25457.diff",
          "patch_url": "https://github.com/facebook/react/pull/25457.patch",
          "merged_at": null
        },
        "body": "We're adding an option to Fizz to support an alternate output format that doesn't rely on inline script tags (see #25437). The two outputs will share the same \"instruction set\" of functions. These functions are currently inlined into the source file; to maintain a single source of truth, in preparation for the new option, this commit moves the instruction set to a separate file that is injected by the build system, similar to a macro.\r\n\r\nIn the future, we could improve this further by running Closure on the instruction set instead of hardcoding the output. This isn't an urgent improvement, though, because we rarely modify the instruction set.\r\n\r\nCo-authored-by: Mofei Zhang <feifei0@fb.com>",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25457/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25457/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25454",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25454/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25454/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25454/events",
        "html_url": "https://github.com/facebook/react/pull/25454",
        "id": 1402217391,
        "node_id": "PR_kwDOAJy2Ks5AcjCF",
        "number": 25454,
        "title": "BREAKING CHANGE: Drop support for string refs",
        "user": {
          "login": "eps1lon",
          "id": 12292047,
          "node_id": "MDQ6VXNlcjEyMjkyMDQ3",
          "avatar_url": "https://avatars.githubusercontent.com/u/12292047?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/eps1lon",
          "html_url": "https://github.com/eps1lon",
          "followers_url": "https://api.github.com/users/eps1lon/followers",
          "following_url": "https://api.github.com/users/eps1lon/following{/other_user}",
          "gists_url": "https://api.github.com/users/eps1lon/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/eps1lon/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/eps1lon/subscriptions",
          "organizations_url": "https://api.github.com/users/eps1lon/orgs",
          "repos_url": "https://api.github.com/users/eps1lon/repos",
          "events_url": "https://api.github.com/users/eps1lon/events{/privacy}",
          "received_events_url": "https://api.github.com/users/eps1lon/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 196858374,
            "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
            "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
            "name": "CLA Signed",
            "color": "e7e7e7",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-10-09T09:40:35Z",
        "updated_at": "2022-10-09T09:53:06Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
          "url": "https://api.github.com/repos/facebook/react/pulls/25454",
          "html_url": "https://github.com/facebook/react/pull/25454",
          "diff_url": "https://github.com/facebook/react/pull/25454.diff",
          "patch_url": "https://github.com/facebook/react/pull/25454.patch",
          "merged_at": null
        },
        "body": "Stacked on [#25383](https://github.com/facebook/react/pull/25383) ([Diff against #25383](https://github.com/facebook/react/compare/eps1lon:forwardRef/deprecate-string-refs-only...eps1lon:forwardRef/remove-string-refs))\r\n## Summary\r\n\r\nPart of https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md#deprecate-string-refs-and-remove-production-mode-_owner-field\r\n\r\nRemoves support for string refers which allows moving `_owner` to a non-enumerable, dev-only property (like `_self` and `_source`). \r\n`_owner` is still used by other dev-only warnings.\r\n\r\n## How did you test this change?\r\n\r\n- [x] CI",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25454/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25454/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25453",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25453/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25453/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25453/events",
        "html_url": "https://github.com/facebook/react/pull/25453",
        "id": 1402164570,
        "node_id": "PR_kwDOAJy2Ks5AcZIX",
        "number": 25453,
        "title": "Refactor: use property shorthand",
        "user": {
          "login": "zhangrenyang",
          "id": 3096013,
          "node_id": "MDQ6VXNlcjMwOTYwMTM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3096013?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/zhangrenyang",
          "html_url": "https://github.com/zhangrenyang",
          "followers_url": "https://api.github.com/users/zhangrenyang/followers",
          "following_url": "https://api.github.com/users/zhangrenyang/following{/other_user}",
          "gists_url": "https://api.github.com/users/zhangrenyang/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/zhangrenyang/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/zhangrenyang/subscriptions",
          "organizations_url": "https://api.github.com/users/zhangrenyang/orgs",
          "repos_url": "https://api.github.com/users/zhangrenyang/repos",
          "events_url": "https://api.github.com/users/zhangrenyang/events{/privacy}",
          "received_events_url": "https://api.github.com/users/zhangrenyang/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 196858374,
            "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
            "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
            "name": "CLA Signed",
            "color": "e7e7e7",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-10-09T06:06:40Z",
        "updated_at": "2022-10-09T06:12:23Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
          "url": "https://api.github.com/repos/facebook/react/pulls/25453",
          "html_url": "https://github.com/facebook/react/pull/25453",
          "diff_url": "https://github.com/facebook/react/pull/25453.diff",
          "patch_url": "https://github.com/facebook/react/pull/25453.patch",
          "merged_at": null
        },
        "body": "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test --prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!--\r\n Explain the **motivation** for making this change. What existing problem does the pull request solve?\r\n-->\r\n\r\n## How did you test this change?\r\n\r\n<!--\r\n  Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface.\r\n  How exactly did you verify that your PR solves the issue you wanted to solve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25453/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25453/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25452",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25452/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25452/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25452/events",
        "html_url": "https://github.com/facebook/react/pull/25452",
        "id": 1402093350,
        "node_id": "PR_kwDOAJy2Ks5AcL09",
        "number": 25452,
        "title": "[react devtools] Device storage support",
        "user": {
          "login": "rbalicki2",
          "id": 4277077,
          "node_id": "MDQ6VXNlcjQyNzcwNzc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/4277077?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/rbalicki2",
          "html_url": "https://github.com/rbalicki2",
          "followers_url": "https://api.github.com/users/rbalicki2/followers",
          "following_url": "https://api.github.com/users/rbalicki2/following{/other_user}",
          "gists_url": "https://api.github.com/users/rbalicki2/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/rbalicki2/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/rbalicki2/subscriptions",
          "organizations_url": "https://api.github.com/users/rbalicki2/orgs",
          "repos_url": "https://api.github.com/users/rbalicki2/repos",
          "events_url": "https://api.github.com/users/rbalicki2/events{/privacy}",
          "received_events_url": "https://api.github.com/users/rbalicki2/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 196858374,
            "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
            "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
            "name": "CLA Signed",
            "color": "e7e7e7",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-10-08T23:23:03Z",
        "updated_at": "2022-10-09T00:09:23Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
          "url": "https://api.github.com/repos/facebook/react/pulls/25452",
          "html_url": "https://github.com/facebook/react/pull/25452",
          "diff_url": "https://github.com/facebook/react/pull/25452.diff",
          "patch_url": "https://github.com/facebook/react/pull/25452.patch",
          "merged_at": null
        },
        "body": "# Summary\r\n* This PR adds support for persisting certain settings to device storage, allowing e.g. RN apps to properly patch the console when restarted.\r\n  * The device storage APIs have signature `getValue(string)` and `setValue(string, string)`, and are thin wrappers around the `Library/Settings` turbomodule.\r\n* Pass device storage getters/setters from RN to DevTools' `connectToDevtools`. The setters are then used to populate values on `window`. Later, the console is patched using these values.\r\n* If we receive a notification from DevTools that the console patching fields have been updated, we write values back to local storage.\r\n* See https://github.com/facebook/react-native/pull/34903\r\n\r\n# How did you test this change?\r\nManual testing, `yarn run test-build-devtools`, `yarn run prettier`, `yarn run flow dom`\r\n\r\n## Manual testing setup:\r\n\r\n### React DevTools Frontend\r\n* Get the DevTools frontend in flipper:\r\n  * `nvm install -g react-devtools-core`, then replace that package with a symlink to the local package\r\n  * enable \"use globally installed devtools\" in flipper\r\n* yarn run start in react-devtools, etc. as well\r\n\r\n### React DevTools Backend\r\n* `yarn run build:backend` in react-devtools-core, then copy-paste that file to the expo app's node_modules directory\r\n\r\n### React Native\r\n* A local version of React Native can be patched in by modifying an expo app's package.json, as in `\"react-native\": \"rbalicki2/react-native#branch-name\"`\r\n\r\n# Versioning safety\r\n* There are three versioned modules to worry about: react native, the devtools frontend and the devtools backend.\r\n* The react devtools backend checks for whether a `cachedSettingsStore` is passed from react native. If not (e.g. if React Native is outdated), then no behavior changes.\r\n* The devtools backend reads the patched console values from the cached settings store. However, if nothing has been stored, for example because the frontend is outdated or has never synced its settings, then behavior doesn't change.\r\n* The devtools frontend sends no new messages. However, if it did send a new message (e.g. \"store this value at this key\"), and the backend was outdated, that message would be silently ignored.\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25452/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25452/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25449",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25449/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25449/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25449/events",
        "html_url": "https://github.com/facebook/react/pull/25449",
        "id": 1401794142,
        "node_id": "PR_kwDOAJy2Ks5AbTst",
        "number": 25449,
        "title": "Updates dev.html to use react 18 createRoot API",
        "user": {
          "login": "camsong",
          "id": 948896,
          "node_id": "MDQ6VXNlcjk0ODg5Ng==",
          "avatar_url": "https://avatars.githubusercontent.com/u/948896?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/camsong",
          "html_url": "https://github.com/camsong",
          "followers_url": "https://api.github.com/users/camsong/followers",
          "following_url": "https://api.github.com/users/camsong/following{/other_user}",
          "gists_url": "https://api.github.com/users/camsong/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/camsong/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/camsong/subscriptions",
          "organizations_url": "https://api.github.com/users/camsong/orgs",
          "repos_url": "https://api.github.com/users/camsong/repos",
          "events_url": "https://api.github.com/users/camsong/events{/privacy}",
          "received_events_url": "https://api.github.com/users/camsong/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 196858374,
            "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
            "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
            "name": "CLA Signed",
            "color": "e7e7e7",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-10-08T02:35:15Z",
        "updated_at": "2022-10-08T02:35:19Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
          "url": "https://api.github.com/repos/facebook/react/pulls/25449",
          "html_url": "https://github.com/facebook/react/pull/25449",
          "diff_url": "https://github.com/facebook/react/pull/25449.diff",
          "patch_url": "https://github.com/facebook/react/pull/25449.patch",
          "merged_at": null
        },
        "body": "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test --prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\nUpdates dev.html to use react 18 createRoot API\r\n\r\n## How did you test this change?\r\n\r\nchange ReactDOM.render to ReactDOM.createRoot. Open the html in chrome, and would find the warning disappeared.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25449/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25449/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25448",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25448/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25448/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25448/events",
        "html_url": "https://github.com/facebook/react/pull/25448",
        "id": 1401754365,
        "node_id": "PR_kwDOAJy2Ks5AbLsG",
        "number": 25448,
        "title": "[DevTools][standalone] Stop sending highlight events when a component is selected",
        "user": {
          "login": "tyao1",
          "id": 5868353,
          "node_id": "MDQ6VXNlcjU4NjgzNTM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5868353?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/tyao1",
          "html_url": "https://github.com/tyao1",
          "followers_url": "https://api.github.com/users/tyao1/followers",
          "following_url": "https://api.github.com/users/tyao1/following{/other_user}",
          "gists_url": "https://api.github.com/users/tyao1/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/tyao1/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/tyao1/subscriptions",
          "organizations_url": "https://api.github.com/users/tyao1/orgs",
          "repos_url": "https://api.github.com/users/tyao1/repos",
          "events_url": "https://api.github.com/users/tyao1/events{/privacy}",
          "received_events_url": "https://api.github.com/users/tyao1/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 196858374,
            "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
            "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
            "name": "CLA Signed",
            "color": "e7e7e7",
            "default": false,
            "description": null
          },
          {
            "id": 1775958285,
            "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
            "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
            "name": "React Core Team",
            "color": "9149d1",
            "default": false,
            "description": "Opened by a member of the React Core Team"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-10-07T23:59:11Z",
        "updated_at": "2022-10-07T23:59:40Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
          "url": "https://api.github.com/repos/facebook/react/pulls/25448",
          "html_url": "https://github.com/facebook/react/pull/25448",
          "diff_url": "https://github.com/facebook/react/pull/25448.diff",
          "patch_url": "https://github.com/facebook/react/pull/25448.patch",
          "merged_at": null
        },
        "body": "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test --prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!--\r\n Explain the **motivation** for making this change. What existing problem does the pull request solve?\r\n-->\r\nThe change only applies to standalone and brings the behavior in sync with the browser extension.\r\nIn https://github.com/facebook/react/pull/25106/files, we started to send new highlight events when a component is hovered, which is consistent with the browser extension. But in the browser extension, we don't keep highlighting a selected component. It was also causing some bad DX on RN, because there is no easy way to unselect an element.\r\nThe devtools frontend is also sending this `inspectElement` event every second when an element is selected, so removing the listener can also saves some CPU.\r\n\r\n\r\n## How did you test this change?\r\n\r\n<!--\r\n  Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface.\r\n  How exactly did you verify that your PR solves the issue you wanted to solve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\r\nSynced to a RN app locally, no highlight is shown anymore on a selected element.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25448/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25448/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25447",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25447/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25447/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25447/events",
        "html_url": "https://github.com/facebook/react/issues/25447",
        "id": 1401637797,
        "node_id": "I_kwDOAJy2Ks5Ti0ul",
        "number": 25447,
        "title": "[DevTools Bug]: Warnings are too \"loud\", mislabeled and make console difficult to use",
        "user": {
          "login": "Sequoia",
          "id": 317498,
          "node_id": "MDQ6VXNlcjMxNzQ5OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/317498?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Sequoia",
          "html_url": "https://github.com/Sequoia",
          "followers_url": "https://api.github.com/users/Sequoia/followers",
          "following_url": "https://api.github.com/users/Sequoia/following{/other_user}",
          "gists_url": "https://api.github.com/users/Sequoia/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Sequoia/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Sequoia/subscriptions",
          "organizations_url": "https://api.github.com/users/Sequoia/orgs",
          "repos_url": "https://api.github.com/users/Sequoia/repos",
          "events_url": "https://api.github.com/users/Sequoia/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Sequoia/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 710573595,
            "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
            "name": "Component: Developer Tools",
            "color": "fbca04",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-10-07T20:28:41Z",
        "updated_at": "2022-10-08T10:05:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Website or app\r\n\r\nhttps://codesandbox.io/s/purple-moon-ts7xzs?file=/src/App.js\r\n\r\n### Repro steps\r\n\r\nIt's not causing this in the codesandbox probably due to some flag missing, but locally in dev I've been getting the following when a stray prop is passed to a dom elem as an attribute (_NB this output is **truncated**, this isn't even the whole message_):\r\n\r\n![Screen Shot 2022-10-07 at 10 39 51 AM](https://user-images.githubusercontent.com/317498/194645730-159ea8cf-7d7c-49f3-b5b3-7caaf5384b44.png)\r\n\r\n## Problems with the current logging approach\r\n\r\n1. **This floods the console and pushes all other messages out of screen, making debugging difficult.** This is the main issue.\r\n2. The severity/\"loudness\" of this log message is out of proportion to the issue. This is a fairly minor issue as it typically does not actually break anything, yet this log drowns out actual issues that I need to see more urgently\r\n3. This issue's importance is being misclassified & the wrong logging API used: `console.error` is being misused to log a warning. The purpose of different log levels is to allow the consumer (developer) to enable or disable logging of less important messages depending on their needs. Putting warnings in the \"error\" stream **takes this control away from developers**. When I am cleaning up upgrade issues, minor bugs etc. I will turn on warnings and see this, but when I'm trying to figure out why my GQL endpoints are erroring, I should be able to turn this off.\r\n\r\n## Ask\r\n\r\nMy goal is to stop this effectively \"breaking\" the error console, i.e. making it unusable by flooding it with messages. Possible approaches:\r\n\r\n1. move these warnings to console.warn, putting control back in the developer/consumer's hands\r\n2. flag to disable the stack traces so messages aren't so enormous\r\n3. use [console.groupCollapsed](https://developer.mozilla.org/en-US/docs/Web/API/console/groupCollapsed) to collapse these, so the stack is there but doesn't flood the console\r\n\r\n## FAQ\r\n\r\n### Why don't you just fix the errors? If you fix the errors, this isn't an issue. The solution is fix the errors.\r\n\r\nI don't mean to brag, but I work on applications with *lots* of errors. I truly wish I could fix every single one, but I must pick my battles and this often means letting smaller issues slide in order to focus on bigger ones. Furthermore, when working on a shared application, it can be out of your power to fix all the errors. There are several reasonable reasons why someone would want to work on their application and ignore certain errors, at least temporarily.\r\n\r\nIn any event, \"this is a valid error message so why should it be quieter\" doesn't address the question of *proportionality*. Should a warning like this overtake the whole console? Should it use `window.alert`? Should it bail out and crash the whole application? It's clear that these approaches to alerting the developer/consumer to an issue are not proportional with the severity of the issue itself, and these more drastic approaches would be inappropriate, even if they \"draw the developer/user's attention to the issue\" as this clearly does.  **Not every issue is p0** which is why we have log levels, and in this context different log streams (info, warning, and error).\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25447/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25447/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25446",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25446/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25446/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25446/events",
        "html_url": "https://github.com/facebook/react/issues/25446",
        "id": 1401051030,
        "node_id": "I_kwDOAJy2Ks5TgleW",
        "number": 25446,
        "title": "Warning: ReactDOM.render is no longer supported in React 18 when using ReactTestUtils.renderIntoDocument",
        "user": {
          "login": "raaaahman",
          "id": 16425382,
          "node_id": "MDQ6VXNlcjE2NDI1Mzgy",
          "avatar_url": "https://avatars.githubusercontent.com/u/16425382?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/raaaahman",
          "html_url": "https://github.com/raaaahman",
          "followers_url": "https://api.github.com/users/raaaahman/followers",
          "following_url": "https://api.github.com/users/raaaahman/following{/other_user}",
          "gists_url": "https://api.github.com/users/raaaahman/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/raaaahman/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/raaaahman/subscriptions",
          "organizations_url": "https://api.github.com/users/raaaahman/orgs",
          "repos_url": "https://api.github.com/users/raaaahman/repos",
          "events_url": "https://api.github.com/users/raaaahman/events{/privacy}",
          "received_events_url": "https://api.github.com/users/raaaahman/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-10-07T11:47:20Z",
        "updated_at": "2022-10-07T15:32:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "React version: 18.2.0\r\nReactDOM version: 18.2.0\r\n\r\n## Steps To Reproduce\r\n\r\n1. Setup Jest\r\n2. Create a test file which calls to the `ReactTestUtils.renderIntoDocument`method\r\n3. Run jest\r\n\r\nExample code:\r\n\r\n```javascript\r\ntest('component should render', () => {\r\n  const container = renderIntoDocument(<MyComponent/>)\r\n\r\n  expect(findRenderedComponentWithType(container, MyComponent)).not.toBeNull()\r\n})\r\n```\r\n## The current behavior\r\n\r\nWhen using `ReactTestUtils.renderIntoDocument`in React 18, I have the following warning in the console, that make the test fail:\r\n\r\n> console.error\r\n>      Warning: ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot\r\n\r\nIt seems to come from this line in the source code: https://github.com/facebook/react/blob/7b25b961df878109a2b3810f33815249cae37ecc/packages/react-dom/src/test-utils/ReactTestUtils.js#L128\r\n\r\n## The expected behavior\r\n\r\nI expect the `ReactTestUtils.renderIntoDocument` method not to trigger a `console.error` and to return a DOM Node.\r\n\r\nI know most of the people are probably using `@testing-library/react` these days, should we expect the React Test Utilities to be deprecated soon?\r\n\r\nThank you for reading.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25446/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25446/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25445",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25445/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25445/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25445/events",
        "html_url": "https://github.com/facebook/react/issues/25445",
        "id": 1400741806,
        "node_id": "I_kwDOAJy2Ks5TfZ-u",
        "number": 25445,
        "title": "Bug: ",
        "user": {
          "login": "Javio99",
          "id": 108767105,
          "node_id": "U_kgDOBnungQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/108767105?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Javio99",
          "html_url": "https://github.com/Javio99",
          "followers_url": "https://api.github.com/users/Javio99/followers",
          "following_url": "https://api.github.com/users/Javio99/following{/other_user}",
          "gists_url": "https://api.github.com/users/Javio99/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Javio99/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Javio99/subscriptions",
          "organizations_url": "https://api.github.com/users/Javio99/orgs",
          "repos_url": "https://api.github.com/users/Javio99/repos",
          "events_url": "https://api.github.com/users/Javio99/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Javio99/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-10-07T07:25:22Z",
        "updated_at": "2022-10-07T07:25:41Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version:\r\n\r\n## Steps To Reproduce\r\n\r\n1.\r\n2.\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\n\r\n## The expected behavior\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25445/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25445/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened"
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25443",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25443/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25443/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25443/events",
        "html_url": "https://github.com/facebook/react/issues/25443",
        "id": 1400306693,
        "node_id": "I_kwDOAJy2Ks5TdvwF",
        "number": 25443,
        "title": "[Feature Request] exhaustive-deps linting rule: allow custom hooks to specify the index of their callback effect",
        "user": {
          "login": "ReillyBova",
          "id": 33428722,
          "node_id": "MDQ6VXNlcjMzNDI4NzIy",
          "avatar_url": "https://avatars.githubusercontent.com/u/33428722?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ReillyBova",
          "html_url": "https://github.com/ReillyBova",
          "followers_url": "https://api.github.com/users/ReillyBova/followers",
          "following_url": "https://api.github.com/users/ReillyBova/following{/other_user}",
          "gists_url": "https://api.github.com/users/ReillyBova/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/ReillyBova/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/ReillyBova/subscriptions",
          "organizations_url": "https://api.github.com/users/ReillyBova/orgs",
          "repos_url": "https://api.github.com/users/ReillyBova/repos",
          "events_url": "https://api.github.com/users/ReillyBova/events{/privacy}",
          "received_events_url": "https://api.github.com/users/ReillyBova/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 121709921,
            "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
            "name": "Type: Feature Request",
            "color": "c7def8",
            "default": false,
            "description": null
          },
          {
            "id": 1249821345,
            "node_id": "MDU6TGFiZWwxMjQ5ODIxMzQ1",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20ESLint%20Rules",
            "name": "Component: ESLint Rules",
            "color": "f7afdb",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-10-06T21:12:29Z",
        "updated_at": "2022-10-08T09:09:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Background\r\nCurrently, the `react-hooks/exhaustive-deps` linting rule allows developers to lint custom hooks. E.g.:\r\n\r\n```\r\n{\r\n  \"rules\": {\r\n    // ...\r\n    \"react-hooks/exhaustive-deps\": [\"warn\", {\r\n      \"additionalHooks\": \"(useMyCustomHook|useMyOtherCustomHook)\"\r\n    }]\r\n  }\r\n}\r\n```\r\n\r\nWhile the [official documentation](https://www.npmjs.com/package/eslint-plugin-react-hooks) for this configuration states \"We suggest to use this option **very sparingly, if at all**\", there are nonetheless certain custom hook cases that necessitate such an approach. Consider the following scenario: (1) a callback needs to hook into an external system (thus requiring an effect), (2) the callback has dependencies on state / props and needs to reexecute when those change, (3) executing that callback can be arbitrarily expensive, so re-executing every render is not an option.\r\n\r\n# Motivation\r\nTo meet this challenge, we have two options: (1) treat the callback reference as sufficiently reactive (by this I mean, referentially stable unless a dependency has changed) — in other words, we assume the user of the hook is passing in a callback that was defined via useCallback, with the appropriate dependencies; (2) accept dependencies in the custom hook itself, wrap the function in a `useEvent` / `useEventHandler` style hook for referential stability, apply the dependencies to whatever effect the function is then executed within.\r\n\r\nIf we go with option (1) we have an obvious shortcoming — there's no way to ensure the user is wrapping their callback in useCallback. From personal experience on a large industry project with lots of developers, this is just not a viable option. Option (2) on the other hand meets all our needs, and via the `additionalHooks` config, we can ensure correctness by linting for exhaustive dependencies.\r\n\r\n# The Problem\r\nGreat! We've met our challenge with a robust solution and easy to use solution, however...... what if our hook accepts a third, or fourth arg? Well, the [current implementation](https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/ExhaustiveDeps.js#L1737) of exhaustive-deps only allows for the [callback, deps] args to occupy arg0 and arg1 of our custom hook (e.g., `useCustomHook(effectCallback, effectDeps)`). While we can still get everything to \"work\", this because more than a minor headache if a hypothetical arg2 we want to add contains some of the most important contextual information. This pain is particularly acute because callbacks are (preferably) defined inline within hooks, and so they'll have a tendency push any succeeding args pretty far down, making them almost seem irrelevant.\r\n\r\n## An example from React\r\nWhile this is ultimately an issue of style, the resulting requirement forces custom hooks that need the exhaustive deps rule into a very awkward argument pattern. It seems I'm not alone, as React's own [`useImperativeHandle`](https://reactjs.org/docs/hooks-reference.html#useimperativehandle) seems to agree in the preferred structure for hooks that accept effectful callbacks with deps. In the case of useImperativeHandle, the most important, unique, and concise value — the `ref` — is passed first, and only then followed by the more verbose and less information-dense callback + deps args.\r\n\r\n## The Proposal\r\nAllowing developers to add their custom hooks to the linting tool is genuinely useful, but it does come with the significant caveat that the effect and deps have to be used as the first two args. I propose either of the following revisions:\r\n\r\n1. The additionalHooks rule be modified to alternatively accept an object of the form `{ [callbackArgIndex: number]: customHookRegex }`. For instance, adding a rule for `useImperativeHandle` would look like\r\n```\r\n\"additionalHooks\": { 1: \"useImperativeHandle\" }\"\r\n```\r\n\r\n2. Instead, the behavior of the rule should be altered to assume that the callback and the dependencies occupy the final two arguments of any given custom hook. This pattern seems consistent with how all native hooks with callback-deps patterns are defined, and so it seems to be a better \"default assumption\" over the current approach. \r\n\r\nIf this proposal is not moved forward with, I highly recommend that the documentation for the linting rule at least be updated to clarify that the linted callback and dependencies must occupy the first two arguments of any custom hook. Mine was failing silently and it took a deep dive into the implementation to understand what was going on!",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25443/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25443/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25440",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25440/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25440/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25440/events",
        "html_url": "https://github.com/facebook/react/pull/25440",
        "id": 1398859898,
        "node_id": "PR_kwDOAJy2Ks5ARWD1",
        "number": 25440,
        "title": "react-hooks: Rules of Hooks now considers component declarations inside JSX attributes",
        "user": {
          "login": "eps1lon",
          "id": 12292047,
          "node_id": "MDQ6VXNlcjEyMjkyMDQ3",
          "avatar_url": "https://avatars.githubusercontent.com/u/12292047?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/eps1lon",
          "html_url": "https://github.com/eps1lon",
          "followers_url": "https://api.github.com/users/eps1lon/followers",
          "following_url": "https://api.github.com/users/eps1lon/following{/other_user}",
          "gists_url": "https://api.github.com/users/eps1lon/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/eps1lon/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/eps1lon/subscriptions",
          "organizations_url": "https://api.github.com/users/eps1lon/orgs",
          "repos_url": "https://api.github.com/users/eps1lon/repos",
          "events_url": "https://api.github.com/users/eps1lon/events{/privacy}",
          "received_events_url": "https://api.github.com/users/eps1lon/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 196858374,
            "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
            "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
            "name": "CLA Signed",
            "color": "e7e7e7",
            "default": false,
            "description": null
          },
          {
            "id": 1249821345,
            "node_id": "MDU6TGFiZWwxMjQ5ODIxMzQ1",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20ESLint%20Rules",
            "name": "Component: ESLint Rules",
            "color": "f7afdb",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-10-06T05:59:09Z",
        "updated_at": "2022-10-06T06:53:21Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
          "url": "https://api.github.com/repos/facebook/react/pulls/25440",
          "html_url": "https://github.com/facebook/react/pull/25440",
          "diff_url": "https://github.com/facebook/react/pull/25440.diff",
          "patch_url": "https://github.com/facebook/react/pull/25440.patch",
          "merged_at": null
        },
        "body": "\r\n\r\n## Summary\r\n\r\nNoticed during work in https://github.com/facebook/react/pull/25360.\r\n\r\nCurrent the below code will trigger rules of hooks with \"hooks can only be called at the top level\" despite the hook being called in something that looks like a component.\r\n```jsx\r\nfunction JSXApp() {\r\n  return (\r\n    <Child\r\n      Component={() => {\r\n        const [myState, setMyState] = useState(null);\r\n      }}\r\n    />\r\n  );\r\n}\r\n```\r\n\r\nThe above code is equivalent to the code below where we already apply Rules of Hooks\r\n```js\r\nfunction App() {\r\n  return createElement(Child, {\r\n    Component: () => {\r\n      const [myState, setMyState] = useState(null);\r\n    },\r\n  });\r\n}\r\n```\r\n\r\nIt's kind of neat to not apply rules of hook the components in JSX attributes since this can prevent declaration of nested components. But the error message wouldn't make sense and it would also flag component declarations in JSX elements that are not created during render.\r\n\r\nThe idea is to release this and https://github.com/facebook/react/pull/25360 together (though https://github.com/facebook/react/pull/25360 would need some rework if this PR is merged to also consider JSXAttributes). \r\n\r\n## How did you test this change?\r\n\r\n- [x] Added tests\r\n- [x] https://github.com/mui/material-ui/\r\n- [x] Klarna monorepo",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25440/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25440/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25438",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25438/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25438/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25438/events",
        "html_url": "https://github.com/facebook/react/pull/25438",
        "id": 1398519900,
        "node_id": "PR_kwDOAJy2Ks5AQLcD",
        "number": 25438,
        "title": "[WIP] Unify default lane with sync lane",
        "user": {
          "login": "tyao1",
          "id": 5868353,
          "node_id": "MDQ6VXNlcjU4NjgzNTM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5868353?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/tyao1",
          "html_url": "https://github.com/tyao1",
          "followers_url": "https://api.github.com/users/tyao1/followers",
          "following_url": "https://api.github.com/users/tyao1/following{/other_user}",
          "gists_url": "https://api.github.com/users/tyao1/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/tyao1/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/tyao1/subscriptions",
          "organizations_url": "https://api.github.com/users/tyao1/orgs",
          "repos_url": "https://api.github.com/users/tyao1/repos",
          "events_url": "https://api.github.com/users/tyao1/events{/privacy}",
          "received_events_url": "https://api.github.com/users/tyao1/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 196858374,
            "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
            "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
            "name": "CLA Signed",
            "color": "e7e7e7",
            "default": false,
            "description": null
          },
          {
            "id": 1775958285,
            "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
            "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
            "name": "React Core Team",
            "color": "9149d1",
            "default": false,
            "description": "Opened by a member of the React Core Team"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-10-05T23:57:28Z",
        "updated_at": "2022-10-10T02:37:42Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
          "url": "https://api.github.com/repos/facebook/react/pulls/25438",
          "html_url": "https://github.com/facebook/react/pull/25438",
          "diff_url": "https://github.com/facebook/react/pull/25438.diff",
          "patch_url": "https://github.com/facebook/react/pull/25438.patch",
          "merged_at": null
        },
        "body": "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test --prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!--\r\n Explain the **motivation** for making this change. What existing problem does the pull request solve?\r\n-->\r\nWe want to unify DefaultLane, SyncLane, and ContinuousLane into just SyncLane, and use a separate field on the root to track whether they should be scheduled with queueMicrotask, requestAnimationFrame, or completely synchronously (in the case of flushSync).\r\nThis PR is for unifying DefaultLane and SyncLane.\r\n\r\nThe main change is that EventPriorities no longer strictly maps to Lane. Instead, it also contains extra bits for `UpdateType`, so that we can distinguish DefaultUpdate from DiscreteUpdate since now they both are on the sync lane.\r\n\r\nTODO:\r\n\r\n- [ ]  Still a lot of test failure need to figure out\r\n\r\n## How did you test this change?\r\n\r\n<!--\r\n  Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface.\r\n  How exactly did you verify that your PR solves the issue you wanted to solve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25438/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25438/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25437",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25437/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25437/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25437/events",
        "html_url": "https://github.com/facebook/react/pull/25437",
        "id": 1398431861,
        "node_id": "PR_kwDOAJy2Ks5AP4SX",
        "number": 25437,
        "title": "[ServerRenderer][draft] Add option to send instructions as data attributes",
        "user": {
          "login": "mofeiZ",
          "id": 34200447,
          "node_id": "MDQ6VXNlcjM0MjAwNDQ3",
          "avatar_url": "https://avatars.githubusercontent.com/u/34200447?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/mofeiZ",
          "html_url": "https://github.com/mofeiZ",
          "followers_url": "https://api.github.com/users/mofeiZ/followers",
          "following_url": "https://api.github.com/users/mofeiZ/following{/other_user}",
          "gists_url": "https://api.github.com/users/mofeiZ/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/mofeiZ/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/mofeiZ/subscriptions",
          "organizations_url": "https://api.github.com/users/mofeiZ/orgs",
          "repos_url": "https://api.github.com/users/mofeiZ/repos",
          "events_url": "https://api.github.com/users/mofeiZ/events{/privacy}",
          "received_events_url": "https://api.github.com/users/mofeiZ/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 196858374,
            "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
            "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
            "name": "CLA Signed",
            "color": "e7e7e7",
            "default": false,
            "description": null
          },
          {
            "id": 1775958285,
            "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
            "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
            "name": "React Core Team",
            "color": "9149d1",
            "default": false,
            "description": "Opened by a member of the React Core Team"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-10-05T22:01:25Z",
        "updated_at": "2022-10-10T14:50:49Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
          "url": "https://api.github.com/repos/facebook/react/pulls/25437",
          "html_url": "https://github.com/facebook/react/pull/25437",
          "diff_url": "https://github.com/facebook/react/pull/25437.diff",
          "patch_url": "https://github.com/facebook/react/pull/25437.patch",
          "merged_at": null
        },
        "body": "Would love to get some feedback on this before writing tests. \r\n\r\n### Changes made:\r\n- Running with enableFizzNoScriptExecution (feature flag) and disableInstructionExecution (param) will generate the following\r\n```\r\n<div hidden data-react-server-instruction='[\"$INSTR\", \"arg0\", \"arg1\"]'></div>\r\n```\r\n\r\n###  What's left\r\n- Add `disableInstructionExecution` as an entrypoint parameter\r\n- Add a MutationObserver implementation\r\n  - Would this belong in react-dom-bindings/client, or somewhere else completely?\r\n  - Since HTML generated by React might be inserted into a shell on the client, should this recursively watch for all added nodes (in all subtrees), or should users be able to pass in some Node to watch? I might be completely misunderstanding what's happening here (e.g. are these instruction elements always top level because of how streaming works?)\r\n- Add ^ to test setup (when using Meta's feature flags)\r\n  (Tests like `ReactDOMFizzServer-test.js` should be reusable here)\r\n\r\n<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test --prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!--\r\n Explain the **motivation** for making this change. What existing problem does the pull request solve?\r\n-->\r\n\r\n## How did you test this change?\r\n\r\n<!--\r\n  Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface.\r\n  How exactly did you verify that your PR solves the issue you wanted to solve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25437/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25437/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25435",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25435/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25435/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25435/events",
        "html_url": "https://github.com/facebook/react/pull/25435",
        "id": 1398114089,
        "node_id": "PR_kwDOAJy2Ks5AO0EG",
        "number": 25435,
        "title": "chore: add cache for eslint",
        "user": {
          "login": "c0dedance",
          "id": 38075730,
          "node_id": "MDQ6VXNlcjM4MDc1NzMw",
          "avatar_url": "https://avatars.githubusercontent.com/u/38075730?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/c0dedance",
          "html_url": "https://github.com/c0dedance",
          "followers_url": "https://api.github.com/users/c0dedance/followers",
          "following_url": "https://api.github.com/users/c0dedance/following{/other_user}",
          "gists_url": "https://api.github.com/users/c0dedance/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/c0dedance/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/c0dedance/subscriptions",
          "organizations_url": "https://api.github.com/users/c0dedance/orgs",
          "repos_url": "https://api.github.com/users/c0dedance/repos",
          "events_url": "https://api.github.com/users/c0dedance/events{/privacy}",
          "received_events_url": "https://api.github.com/users/c0dedance/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 196858374,
            "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
            "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
            "name": "CLA Signed",
            "color": "e7e7e7",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-10-05T17:14:23Z",
        "updated_at": "2022-10-05T17:19:35Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
          "url": "https://api.github.com/repos/facebook/react/pulls/25435",
          "html_url": "https://github.com/facebook/react/pull/25435",
          "diff_url": "https://github.com/facebook/react/pull/25435.diff",
          "patch_url": "https://github.com/facebook/react/pull/25435.patch",
          "merged_at": null
        },
        "body": "Store the info about processed files in order to only operate on the changed ones. The cache is stored in .eslintcache by default. Enabling this option can dramatically improve ESLint’s running time by ensuring that only changed files are linted.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25435/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25435/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25427",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25427/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25427/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25427/events",
        "html_url": "https://github.com/facebook/react/issues/25427",
        "id": 1397470538,
        "node_id": "I_kwDOAJy2Ks5TS7VK",
        "number": 25427,
        "title": "[DevTools Bug]: Hook parsing failed for default Next.js configuration",
        "user": {
          "login": "rossng",
          "id": 565371,
          "node_id": "MDQ6VXNlcjU2NTM3MQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/565371?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/rossng",
          "html_url": "https://github.com/rossng",
          "followers_url": "https://api.github.com/users/rossng/followers",
          "following_url": "https://api.github.com/users/rossng/following{/other_user}",
          "gists_url": "https://api.github.com/users/rossng/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/rossng/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/rossng/subscriptions",
          "organizations_url": "https://api.github.com/users/rossng/orgs",
          "repos_url": "https://api.github.com/users/rossng/repos",
          "events_url": "https://api.github.com/users/rossng/events{/privacy}",
          "received_events_url": "https://api.github.com/users/rossng/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 710573595,
            "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
            "name": "Component: Developer Tools",
            "color": "fbca04",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-10-05T09:00:01Z",
        "updated_at": "2022-10-05T09:02:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Website or app\r\n\r\nhttps://github.com/vercel/next.js/tree/canary/examples/blog-starter\r\n\r\n### Repro steps\r\n\r\n1. Create an instance of the official Next.js blog starter template, e.g. `yarn create next-app --example blog-starter blog-starter`\r\n2. Run `yarn dev` (or equivalent) inside the created project.\r\n3. Go to the webpage (normally `http://localhost:3000`) and open the React devtools\r\n4. Enable 'Always parse hook names from source' in the devtool options\r\n5. Observe the error 'Hook parsing failed':\r\n    <img width=\"669\" alt=\"image\" src=\"https://user-images.githubusercontent.com/565371/194022450-1b32305a-b2bc-42bc-ac4d-ed389e9fdc74.png\">\r\n\r\nNote: Next.js does not allow you to change the source map format (`devtool`) setting so it's rather difficult to work around this issue.\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25427/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25427/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25415",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25415/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25415/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25415/events",
        "html_url": "https://github.com/facebook/react/issues/25415",
        "id": 1396477074,
        "node_id": "I_kwDOAJy2Ks5TPIyS",
        "number": 25415,
        "title": "[DevTools Bug]: \"Message length exceeded maximum allowed length\" when profiling a complex application",
        "user": {
          "login": "joshkel",
          "id": 476338,
          "node_id": "MDQ6VXNlcjQ3NjMzOA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/476338?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/joshkel",
          "html_url": "https://github.com/joshkel",
          "followers_url": "https://api.github.com/users/joshkel/followers",
          "following_url": "https://api.github.com/users/joshkel/following{/other_user}",
          "gists_url": "https://api.github.com/users/joshkel/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/joshkel/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/joshkel/subscriptions",
          "organizations_url": "https://api.github.com/users/joshkel/orgs",
          "repos_url": "https://api.github.com/users/joshkel/repos",
          "events_url": "https://api.github.com/users/joshkel/events{/privacy}",
          "received_events_url": "https://api.github.com/users/joshkel/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 710573595,
            "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
            "name": "Component: Developer Tools",
            "color": "fbca04",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-10-04T15:31:21Z",
        "updated_at": "2022-10-06T15:59:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Website or app\n\nN/A\n\n### Repro steps\n\nWhen profiling a complex, proprietary app, I regularly get an error message, \"Message length exceeded maximum allowed length.\"\r\n\r\nSteps to reproduce:\r\n\r\n1. Within the Dev Tools, go to the Profiler tab.\r\n2. Click the \"Start Profiling\" button.\r\n3. Let the app run for a bit. Do some things in the app.\r\n4. Click the \"Stop Profiling\" (\"record\") button.\r\n\r\nAt this point, the Chrome Dev Tools console logs an error:\r\n\r\n```\r\ncontentScript.js:116 Uncaught Error: Message length exceeded maximum allowed length.\r\n    at handleMessageFromPage (contentScript.js:116:10)\r\n```\r\n\r\nAnd the Profiler tab is stuck with the message, \"Processing data... This should only take a minute.\"\r\n\r\nThe error is thrown from https://github.com/facebook/react/blob/64fe791be84ad04a4a1d005376ba5cf5701db9b7/packages/react-devtools-extensions/src/contentScript.js#L36\r\n\r\nThe last time this occurred, when breaking on exceptions at that line, `JSON.stringify(event.data.payload).length` reports 92074565. I can provide further information on the contents of the problematic `event.data.payload` if that would be helpful.\r\n\r\nI apologize for the lack of a reproducible test case - it's a complex app (which is why I was looking into profiling), and I don't think I could simplify it down to a public test case while triggering the error.\n\n### How often does this bug happen?\n\nOften\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25415/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25415/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25391",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25391/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25391/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25391/events",
        "html_url": "https://github.com/facebook/react/issues/25391",
        "id": 1396194901,
        "node_id": "I_kwDOAJy2Ks5TOD5V",
        "number": 25391,
        "title": "Remove alternate tree DOM element retainers to help with memory leak investigations",
        "user": {
          "login": "ling1726",
          "id": 20744592,
          "node_id": "MDQ6VXNlcjIwNzQ0NTky",
          "avatar_url": "https://avatars.githubusercontent.com/u/20744592?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ling1726",
          "html_url": "https://github.com/ling1726",
          "followers_url": "https://api.github.com/users/ling1726/followers",
          "following_url": "https://api.github.com/users/ling1726/following{/other_user}",
          "gists_url": "https://api.github.com/users/ling1726/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/ling1726/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/ling1726/subscriptions",
          "organizations_url": "https://api.github.com/users/ling1726/orgs",
          "repos_url": "https://api.github.com/users/ling1726/repos",
          "events_url": "https://api.github.com/users/ling1726/events{/privacy}",
          "received_events_url": "https://api.github.com/users/ling1726/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
    
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-10-04T12:29:25Z",
        "updated_at": "2022-10-04T12:35:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi,\r\n\r\n#16087, #15157 (and other issues) point out that React keeps an alternate tree that can retain DOM elements in fibers such as the `stateNode` property. This can make it hard to debug memory leaks in larger sites/applications since they are a false positive.\r\n\r\nTo make the investigation process easier, would it be possible to recommend/suggest a way to somehow clean up the retainers in alternate fiber so that there is less noise?\r\n\r\nWe have some tools that do this to more or less successfully by paring the fiber tree and setting `alternate.stateNode` to `null`.\r\n\r\nI understand that fibers are internal API and that anything retained in alternate tree should fix itself eventually if the userland code is not leaky. However when there are leaks in userland the alternate tree can make root causing real memory leaks quite hard, even for those who are aware that retention in alternate trees is expected and a normal behaviour of React.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25391/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25391/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25387",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25387/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25387/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25387/events",
        "html_url": "https://github.com/facebook/react/pull/25387",
        "id": 1394858751,
        "node_id": "PR_kwDOAJy2Ks5AD_OM",
        "number": 25387,
        "title": "Remove feature flag enableStrictEffects",
        "user": {
          "login": "sammy-SC",
          "id": 1733610,
          "node_id": "MDQ6VXNlcjE3MzM2MTA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1733610?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sammy-SC",
          "html_url": "https://github.com/sammy-SC",
          "followers_url": "https://api.github.com/users/sammy-SC/followers",
          "following_url": "https://api.github.com/users/sammy-SC/following{/other_user}",
          "gists_url": "https://api.github.com/users/sammy-SC/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sammy-SC/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sammy-SC/subscriptions",
          "organizations_url": "https://api.github.com/users/sammy-SC/orgs",
          "repos_url": "https://api.github.com/users/sammy-SC/repos",
          "events_url": "https://api.github.com/users/sammy-SC/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sammy-SC/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 196858374,
            "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
            "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
            "name": "CLA Signed",
            "color": "e7e7e7",
            "default": false,
            "description": null
          },
          {
            "id": 1775958285,
            "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
            "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
            "name": "React Core Team",
            "color": "9149d1",
            "default": false,
            "description": "Opened by a member of the React Core Team"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2022-10-03T14:42:26Z",
        "updated_at": "2022-10-11T15:25:14Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
          "url": "https://api.github.com/repos/facebook/react/pulls/25387",
          "html_url": "https://github.com/facebook/react/pull/25387",
          "diff_url": "https://github.com/facebook/react/pull/25387.diff",
          "patch_url": "https://github.com/facebook/react/pull/25387.patch",
          "merged_at": null
        },
        "body": "`enableStrictEffects` has been shipped everywhere except React Native OSS. Let's ship it to get consistent behaviour of StrictMode and remove unnecessary feature flag.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25387/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25387/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25384",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25384/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25384/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25384/events",
        "html_url": "https://github.com/facebook/react/issues/25384",
        "id": 1394020294,
        "node_id": "I_kwDOAJy2Ks5TFw_G",
        "number": 25384,
        "title": "Bug: state changes of input[type='number'] value doesn't update real DOM",
        "user": {
          "login": "cdpark0530",
          "id": 54495831,
          "node_id": "MDQ6VXNlcjU0NDk1ODMx",
          "avatar_url": "https://avatars.githubusercontent.com/u/54495831?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/cdpark0530",
          "html_url": "https://github.com/cdpark0530",
          "followers_url": "https://api.github.com/users/cdpark0530/followers",
          "following_url": "https://api.github.com/users/cdpark0530/following{/other_user}",
          "gists_url": "https://api.github.com/users/cdpark0530/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/cdpark0530/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/cdpark0530/subscriptions",
          "organizations_url": "https://api.github.com/users/cdpark0530/orgs",
          "repos_url": "https://api.github.com/users/cdpark0530/repos",
          "events_url": "https://api.github.com/users/cdpark0530/events{/privacy}",
          "received_events_url": "https://api.github.com/users/cdpark0530/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-10-03T02:11:29Z",
        "updated_at": "2022-10-03T02:11:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nThe problem is that state changes going into `value` prop of `input[type=\"number\"]` don't update(synchronize) real DOM. Regardless of what type of `value` that `input[type=\"number\"]` expects in internal implementation, (based on what I observed) it's showing inconsistent behavior.\r\nThis bug has been happening since very old version in my experience, and github issues about this are still open:\r\n> https://github.com/facebook/react/issues/9402: A number input will always have left pad 0 though parseFloat value in onChange\r\n> https://github.com/facebook/react/issues/13651: input[type='number'] value isn't updated\r\n\r\nI'm writing this new bug report since they point out derived errors not its fundamental problem.\r\n\r\nReact version:\r\n18.2.0\r\n\r\n## Steps To Reproduce\r\n\r\n1. create `input[type=\"number\"]` and set `value` with state of type `number|undefined`, default empty string.\r\n2. set `onChange`(or `onInput`) handler and change the `number|undefined` state on typing.\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https://codesandbox.io/s/input-type-number-bug-bosfmv?file=/src/App.tsx\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior: when setting `number` on `value` with default empty `string`\r\nReal DOM shows left pad 0. https://github.com/facebook/react/issues/9402 and https://github.com/facebook/react/issues/13651 talk about this. Putting stringified value is workaround as https://github.com/facebook/react/issues/13651#issuecomment-727244841 mentioned.\r\n\r\n## The expected behavior: when setting `number` on `value` with default empty `string`\r\nReal DOM should show actual `value` even if the type of initial value is `string`. For example, when the `value` is type of `number`, it should show the number without left pad 0.\r\n\r\n## The current behavior: when setting stringified `number` on `value` with default empty `string`\r\nReal DOM doesn't show the value that you set on `value`.\r\n(Please look up above codesandbox link)\r\nPutting `123--`(or whatever invalid number format you can put) results setting `undefined` on the state type of `number`, which results setting empty `string` on `value`. But it still shows `123--`.\r\n\r\n## The expected behavior: when setting stringified `number` on `value` with default empty `string`\r\nReal DOM should show the value that you set on `value`.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25384/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25384/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25383",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25383/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25383/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25383/events",
        "html_url": "https://github.com/facebook/react/pull/25383",
        "id": 1393788413,
        "node_id": "PR_kwDOAJy2Ks5AAcxA",
        "number": 25383,
        "title": "Turn on string ref deprecation warning for everybody (not codemoddable)",
        "user": {
          "login": "eps1lon",
          "id": 12292047,
          "node_id": "MDQ6VXNlcjEyMjkyMDQ3",
          "avatar_url": "https://avatars.githubusercontent.com/u/12292047?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/eps1lon",
          "html_url": "https://github.com/eps1lon",
          "followers_url": "https://api.github.com/users/eps1lon/followers",
          "following_url": "https://api.github.com/users/eps1lon/following{/other_user}",
          "gists_url": "https://api.github.com/users/eps1lon/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/eps1lon/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/eps1lon/subscriptions",
          "organizations_url": "https://api.github.com/users/eps1lon/orgs",
          "repos_url": "https://api.github.com/users/eps1lon/repos",
          "events_url": "https://api.github.com/users/eps1lon/events{/privacy}",
          "received_events_url": "https://api.github.com/users/eps1lon/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 196858374,
            "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
            "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
            "name": "CLA Signed",
            "color": "e7e7e7",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-10-02T14:37:59Z",
        "updated_at": "2022-10-09T09:16:02Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
          "url": "https://api.github.com/repos/facebook/react/pulls/25383",
          "html_url": "https://github.com/facebook/react/pull/25383",
          "diff_url": "https://github.com/facebook/react/pull/25383.diff",
          "patch_url": "https://github.com/facebook/react/pull/25383.patch",
          "merged_at": null
        },
        "body": "\r\n\r\n## Summary\r\n \r\nAlternate to https://github.com/facebook/react/pull/25334 without any prod runtime changes i.e. the proposed codemod in https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md#deprecate-string-refs-and-remove-production-mode-_owner-field would not work.\r\n\r\n## How did you test this change?\r\n\r\n- [x] CI\r\n- [x] `yarn test` with and without `warnAboutStringRefs` \r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25383/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25383/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25379",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25379/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25379/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25379/events",
        "html_url": "https://github.com/facebook/react/issues/25379",
        "id": 1393633204,
        "node_id": "I_kwDOAJy2Ks5TESe0",
        "number": 25379,
        "title": "eslint-plugin-react-hooks: lint rule to enforce that `useMemo` returns a value",
        "user": {
          "login": "JoshuaKGoldberg",
          "id": 3335181,
          "node_id": "MDQ6VXNlcjMzMzUxODE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3335181?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/JoshuaKGoldberg",
          "html_url": "https://github.com/JoshuaKGoldberg",
          "followers_url": "https://api.github.com/users/JoshuaKGoldberg/followers",
          "following_url": "https://api.github.com/users/JoshuaKGoldberg/following{/other_user}",
          "gists_url": "https://api.github.com/users/JoshuaKGoldberg/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/JoshuaKGoldberg/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/JoshuaKGoldberg/subscriptions",
          "organizations_url": "https://api.github.com/users/JoshuaKGoldberg/orgs",
          "repos_url": "https://api.github.com/users/JoshuaKGoldberg/repos",
          "events_url": "https://api.github.com/users/JoshuaKGoldberg/events{/privacy}",
          "received_events_url": "https://api.github.com/users/JoshuaKGoldberg/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 121709921,
            "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
            "name": "Type: Feature Request",
            "color": "c7def8",
            "default": false,
            "description": null
          },
          {
            "id": 1249821345,
            "node_id": "MDU6TGFiZWwxMjQ5ODIxMzQ1",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20ESLint%20Rules",
            "name": "Component: ESLint Rules",
            "color": "f7afdb",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2022-10-02T04:01:58Z",
        "updated_at": "2022-10-02T12:44:52Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Nothing prevents developers from calling `useMemo` without a `return`:\r\n\r\n```ts\r\nimport { useMemo } from \"react\";\r\n\r\nuseMemo(() => {\r\n    console.log(\"Yippee!\");\r\n}, []);\r\n```\r\n\r\n[[TypeScript playground showing no errors](https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAbzgVwM4FMCy6QTgXzgDMoIQ4AiKdAQwGMYKBuAWACh20scIAKXgJRwAvAD5E7OFLh0IAO1QQANugB0SiAHNeFAJrAwYdOgCEFAazb4ANHADaAXQtA)]\r\n\r\nCalling `useMemo` without a returned value is somewhat equivalent to calling `useEffect` without a returned value. Judging by the few times I've seen it happen, it's likely a case of a developer either confusing the two hooks or forgetting to `return` the memoized value.\r\n\r\nSuggestion: can we add a lint rule to flag `useMemo` calls that don't definitely return a value? It could have a _suggestion_ fixer to switch to `useEffect`.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25379/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25379/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25376",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25376/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25376/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25376/events",
        "html_url": "https://github.com/facebook/react/pull/25376",
        "id": 1393280627,
        "node_id": "PR_kwDOAJy2Ks4_-5ZR",
        "number": 25376,
        "title": "ReactDOM:-Added test to find rendered component with the type in document",
        "user": {
          "login": "Biki-das",
          "id": 72331432,
          "node_id": "MDQ6VXNlcjcyMzMxNDMy",
          "avatar_url": "https://avatars.githubusercontent.com/u/72331432?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Biki-das",
          "html_url": "https://github.com/Biki-das",
          "followers_url": "https://api.github.com/users/Biki-das/followers",
          "following_url": "https://api.github.com/users/Biki-das/following{/other_user}",
          "gists_url": "https://api.github.com/users/Biki-das/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Biki-das/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Biki-das/subscriptions",
          "organizations_url": "https://api.github.com/users/Biki-das/orgs",
          "repos_url": "https://api.github.com/users/Biki-das/repos",
          "events_url": "https://api.github.com/users/Biki-das/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Biki-das/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 196858374,
            "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
            "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
            "name": "CLA Signed",
            "color": "e7e7e7",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-10-01T07:10:24Z",
        "updated_at": "2022-10-01T07:16:10Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
          "url": "https://api.github.com/repos/facebook/react/pulls/25376",
          "html_url": "https://github.com/facebook/react/pull/25376",
          "diff_url": "https://github.com/facebook/react/pull/25376.diff",
          "patch_url": "https://github.com/facebook/react/pull/25376.patch",
          "merged_at": null
        },
        "body": "\r\nAdded a small test to the reactdom, which test to find the rendered component with the type in document\r\n\r\n![Windows PowerShell 4_13_2022 11_35_30 PM](https://user-images.githubusercontent.com/72331432/193397671-adc50468-8285-4c0d-b954-3e844730f1a5.png)\r\n\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25376/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25376/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25367",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25367/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25367/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25367/events",
        "html_url": "https://github.com/facebook/react/issues/25367",
        "id": 1392629409,
        "node_id": "I_kwDOAJy2Ks5TAdah",
        "number": 25367,
        "title": "[DevTools Bug]: DevTools causes hook callback behavior inconstency",
        "user": {
          "login": "nhusher",
          "id": 376978,
          "node_id": "MDQ6VXNlcjM3Njk3OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/376978?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/nhusher",
          "html_url": "https://github.com/nhusher",
          "followers_url": "https://api.github.com/users/nhusher/followers",
          "following_url": "https://api.github.com/users/nhusher/following{/other_user}",
          "gists_url": "https://api.github.com/users/nhusher/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/nhusher/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/nhusher/subscriptions",
          "organizations_url": "https://api.github.com/users/nhusher/orgs",
          "repos_url": "https://api.github.com/users/nhusher/repos",
          "events_url": "https://api.github.com/users/nhusher/events{/privacy}",
          "received_events_url": "https://api.github.com/users/nhusher/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 710573595,
            "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
            "name": "Component: Developer Tools",
            "color": "fbca04",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2022-09-30T15:42:26Z",
        "updated_at": "2022-09-30T15:42:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Website or app\n\nhttps://gist.github.com/nhusher/33981014bb69318ead012c11a73eff52\n\n### Repro steps\n\nEither clone the gist and run with static-server, or check out [this equivalent codesandbox link](https://5lu8ks.csb.app/) (Full sandbox IDE [here](https://codesandbox.io/s/new-snowflake-5lu8ks?file=/src/index.tsx))\r\n\r\n1. Have React devtools installed \r\n2. Visit the URL indicated by static-server\r\n3. Click both increment buttons, ensuring that they work\r\n4. Open the developer tools\r\n5. Navigate to the DevTools Component tree and highlight `<App />`\r\n6. Click both the increment buttons\r\n7. Observe that the normal in-React increment button works\r\n8. Observe that the \"increment (outside react)\" button no longer works\r\n\r\nVerification of the issue:\r\n\r\n1. Open an incognito window\r\n2. Visit the URL indicated by static-server\r\n3. Click the two buttons and verify that both work\r\n4. Open the developer tools (no React Devtools available)\r\n5. Verify the two buttons continue to work\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25367/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25367/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25360",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25360/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25360/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25360/events",
        "html_url": "https://github.com/facebook/react/pull/25360",
        "id": 1391516139,
        "node_id": "PR_kwDOAJy2Ks4_4-ql",
        "number": 25360,
        "title": "Add no-nested-components ESLint rule",
        "user": {
          "login": "eps1lon",
          "id": 12292047,
          "node_id": "MDQ6VXNlcjEyMjkyMDQ3",
          "avatar_url": "https://avatars.githubusercontent.com/u/12292047?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/eps1lon",
          "html_url": "https://github.com/eps1lon",
          "followers_url": "https://api.github.com/users/eps1lon/followers",
          "following_url": "https://api.github.com/users/eps1lon/following{/other_user}",
          "gists_url": "https://api.github.com/users/eps1lon/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/eps1lon/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/eps1lon/subscriptions",
          "organizations_url": "https://api.github.com/users/eps1lon/orgs",
          "repos_url": "https://api.github.com/users/eps1lon/repos",
          "events_url": "https://api.github.com/users/eps1lon/events{/privacy}",
          "received_events_url": "https://api.github.com/users/eps1lon/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 196858374,
            "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
            "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
            "name": "CLA Signed",
            "color": "e7e7e7",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2022-09-29T21:19:33Z",
        "updated_at": "2022-10-03T16:55:23Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
          "url": "https://api.github.com/repos/facebook/react/pulls/25360",
          "html_url": "https://github.com/facebook/react/pull/25360",
          "diff_url": "https://github.com/facebook/react/pull/25360.diff",
          "patch_url": "https://github.com/facebook/react/pull/25360.patch",
          "merged_at": null
        },
        "body": "## Summary\r\n\r\nAdds a new `no-nested-components` rule to `eslint-plugin-react-hooks` that triggers on nested component declarations e.g.\r\n\r\n```jsx\r\nfunction Component() {\r\n  const Nested = () => <div />;\r\n  // ^^^^^^^^^^^^^^^^^^^^^^^^^^^ \r\n  // Component \"Nested\" is declared during render. \r\n  // You should move this declaration outside of render to ensure this component's state is persisted across re-renders of its parent. \r\n  // If this is not a component, or not inside a component or hook, rename it to make sure it is not mistaken for a component e.g. `Icon` -> `renderIcon`.\r\n\r\n  return <Nested />\r\n}\r\n```\r\n\r\n\r\n\r\nThese declarations are problematic since the nested components will not persist state across re-renders of the parent component.\r\n\r\nThe [tests are copied from `react/no-nested-unstable-components`](https://github.com/jsx-eslint/eslint-plugin-react/blob/master/tests/lib/rules/no-unstable-nested-components.js) but re-ordered since we currently apply the same logic as rules-of-hooks: If it looks like a component and is inside a component or hooks it cannot be nested inside another component.\r\n\r\nUnlike `react/no-nested-unstable-components` we currently don't detect nested component definitions in class components nor do we detect nested class component definitions. Both of these scenarios would be nice to cover as well though!\r\n\r\nOpen questions: \r\n- [ ] releaseable? should more cases be covered? better package (name)?\r\n- [ ] rule name bikeshedding\r\n- [ ] internal: inline helpers from RulesOfHooks or created shared helpers?\r\n- [ ] How do we communicate forking of lint rules? What happens in code bases with both `react/no-unstable-nested-components` and `react-hooks/no-nested-components`?\r\n\r\n## How did you test this change?\r\n\r\n- [x] CI\r\n- [x] [mui/mui](https://github.com/mui/material-ui/)\r\n- [x] Klarna monorepo\r\n- [x] [@AriPerkkio ran it on 20k OSS repos](https://github.com/facebook/react/pull/25360#pullrequestreview-1127521790) One false-positive could be caught before release. The other patterns are consistent with rules-of-hooks\r\n\r\n## Why not recommend `react/no-nested-unstable-components`\r\n\r\n- [Questionable if this rule will be part of the recommended ruleset in a timely manner.](https://github.com/jsx-eslint/eslint-plugin-react/pull/3444)\r\n- Consistent detection of what's considered a component (e.g. we can detect nested forwardRef or memo component declarations )\r\n- `no-unstable-nested-components` is not actually what we want. It's just about nesting components. Memoizing them will still cause breakage since their state won't be re-useable (remember that useMemo/useCallback are perf optimizations not semantic guarantees unlike `key` and component types)\r\n\r\n###  Not detected in proposed rule but detected in `react/no-unstable-nested-components`\r\n\r\nA. `<Component footer={() => <div />} />`\r\n\r\nThis is probably correct to no longer detect since `const footer = () => <div />} />` would also not be considered a component. However, `<Component Footer={() => <div />} />` would also not be detected. This would probably be nice to get into Rules of Hooks regardless.\r\n\r\n\r\n### Detected in proposed rule but not detected in `react/no-unstable-nested-components`\r\n\r\nA.\r\n```jsx\r\nfunction useHook() {\r\n   return function Component() {}\r\n}\r\n```\r\nIntended. Hooks are called during render which means the component declaration happens during render.\r\n\r\nB.\r\n```jsx\r\nfunction Component() {\r\n   const ConditionalWrapper = ({ condition, wrapper, children }: any) =>\r\n      condition ? wrapper(children) : children\r\n}\r\n```\r\nIntended. Rules of Hooks would allow calling a Hook in `ConditionalWrapper` so we should consider it a nested declaration.\r\n\r\nC.\r\n\r\n```jsx\r\nfunction Component() {\r\n  const components = {\r\n    ActionIcon: () => null,\r\n  }\r\n}\r\n```\r\n\r\nIntended. Even though flagging this particular example seems silly, Rules of Hooks would allow calling a Hook in `ActionIcon` so we should consider it a nested declaration.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25360/reactions",
          "total_count": 5,
          "+1": 4,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 1,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25360/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/25357",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/25357/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/25357/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/25357/events",
        "html_url": "https://github.com/facebook/react/pull/25357",
        "id": 1391193127,
        "node_id": "PR_kwDOAJy2Ks4_35ld",
        "number": 25357,
        "title": "Patch EventTarget.prototype.dispatchEvent",
        "user": {
          "login": "tyao1",
          "id": 5868353,
          "node_id": "MDQ6VXNlcjU4NjgzNTM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5868353?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/tyao1",
          "html_url": "https://github.com/tyao1",
          "followers_url": "https://api.github.com/users/tyao1/followers",
          "following_url": "https://api.github.com/users/tyao1/following{/other_user}",
          "gists_url": "https://api.github.com/users/tyao1/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/tyao1/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/tyao1/subscriptions",
          "organizations_url": "https://api.github.com/users/tyao1/orgs",
          "repos_url": "https://api.github.com/users/tyao1/repos",
          "events_url": "https://api.github.com/users/tyao1/events{/privacy}",
          "received_events_url": "https://api.github.com/users/tyao1/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 196858374,
            "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
            "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
            "name": "CLA Signed",
            "color": "e7e7e7",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [
    
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2022-09-29T16:58:33Z",
        "updated_at": "2022-09-29T21:31:24Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
          "url": "https://api.github.com/repos/facebook/react/pulls/25357",
          "html_url": "https://github.com/facebook/react/pull/25357",
          "diff_url": "https://github.com/facebook/react/pull/25357.diff",
          "patch_url": "https://github.com/facebook/react/pull/25357.patch",
          "merged_at": null
        },
        "body": "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test --prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!--\r\n Explain the **motivation** for making this change. What existing problem does the pull request solve?\r\n-->\r\nAdds a function to patch EventTarget.prototype.dispatchEvent so that custom events inherit the priority of the outer event type. It's done by setting a `eventPriorityOverride` variable in the patched method, then `getEventPriority` can use that.\r\n\r\n\r\n## How did you test this change?\r\n\r\n<!--\r\n  Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface.\r\n  How exactly did you verify that your PR solves the issue you wanted to solve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\r\n`yarn test `monkeypatchDispatchEvent-test``\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/25357/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/25357/timeline",
        "performed_via_github_app": null,
        "state_reason": null
      },
{
"url": "https://api.github.com/repos/facebook/react/issues/25464",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25464/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25464/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25464/events",
"html_url": "https://github.com/facebook/react/pull/25464",
"id": 1404750775,
"node_id": "PR_kwDOAJy2Ks5Ak6Ni",
"number": 25464,
"title": "Fix flow suppressions in DOMProperty",
"user": {
  "login": "kassens",
  "id": 11849,
  "node_id": "MDQ6VXNlcjExODQ5",
  "avatar_url": "https://avatars.githubusercontent.com/u/11849?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/kassens",
  "html_url": "https://github.com/kassens",
  "followers_url": "https://api.github.com/users/kassens/followers",
  "following_url": "https://api.github.com/users/kassens/following{/other_user}",
  "gists_url": "https://api.github.com/users/kassens/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/kassens/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/kassens/subscriptions",
  "organizations_url": "https://api.github.com/users/kassens/orgs",
  "repos_url": "https://api.github.com/users/kassens/repos",
  "events_url": "https://api.github.com/users/kassens/events{/privacy}",
  "received_events_url": "https://api.github.com/users/kassens/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 196858374,
    "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
    "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
    "name": "CLA Signed",
    "color": "e7e7e7",
    "default": false,
    "description": null
  },
  {
    "id": 1775958285,
    "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
    "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
    "name": "React Core Team",
    "color": "9149d1",
    "default": false,
    "description": "Opened by a member of the React Core Team"
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 0,
"created_at": "2022-10-11T14:31:31Z",
"updated_at": "2022-10-11T14:32:22Z",
"closed_at": null,
"author_association": "MEMBER",
"active_lock_reason": null,
"draft": false,
"pull_request": {
  "url": "https://api.github.com/repos/facebook/react/pulls/25464",
  "html_url": "https://github.com/facebook/react/pull/25464",
  "diff_url": "https://github.com/facebook/react/pull/25464.diff",
  "patch_url": "https://github.com/facebook/react/pull/25464.patch",
  "merged_at": null
},
"body": "Replaces the function constructor call with a factory method. This makes this covered by Flow.\r\n\r\nI think if an object is created from a literal in one place it should always have the same hidden class, but I'm curious if I'm missing something here why this should be a `new` call.",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25464/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25464/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25462",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25462/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25462/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25462/events",
"html_url": "https://github.com/facebook/react/issues/25462",
"id": 1404540014,
"node_id": "I_kwDOAJy2Ks5Tt5Ru",
"number": 25462,
"title": "Bug: <div> stops scrolling using keyboard arrows when tabIndex is specified for the onKeyDown event to work",
"user": {
  "login": "holem",
  "id": 159443,
  "node_id": "MDQ6VXNlcjE1OTQ0Mw==",
  "avatar_url": "https://avatars.githubusercontent.com/u/159443?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/holem",
  "html_url": "https://github.com/holem",
  "followers_url": "https://api.github.com/users/holem/followers",
  "following_url": "https://api.github.com/users/holem/following{/other_user}",
  "gists_url": "https://api.github.com/users/holem/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/holem/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/holem/subscriptions",
  "organizations_url": "https://api.github.com/users/holem/orgs",
  "repos_url": "https://api.github.com/users/holem/repos",
  "events_url": "https://api.github.com/users/holem/events{/privacy}",
  "received_events_url": "https://api.github.com/users/holem/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 155984160,
    "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
    "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
    "name": "Status: Unconfirmed",
    "color": "d4c5f9",
    "default": false,
    "description": "A potential issue that we haven't yet confirmed as a bug"
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 1,
"created_at": "2022-10-11T12:17:54Z",
"updated_at": "2022-10-11T14:22:52Z",
"closed_at": null,
"author_association": "NONE",
"active_lock_reason": null,
"body": "Hi everyone. \r\n\r\nThere is one `div` that is always wider than the page have available space for it. It is placed in a container with `overflow-x: visible`, which in turn is placed in a flex container. So, with this layout, if you click on this `div` and then press the left-right arrows on the keyboard, the container will scroll. This is the expected behavior (at least in Chrome and Edge, but for some reason not in Firefox).\r\n\r\nNow I need to add an `onKeyDown` event handler to change the contents of the `div` when certain buttons on the keyboard are pressed (including left-right arrows). In order for the `onKeyDown` event to work, you need to add `tabIndex=0` for this block. But when I have the `tabIndex` added, the container stopped scrolling when the right-left arrows are pressed. And this is not the expected behavior. I expect that scrolling the container with the left-right arrows from the keyboard will continue to work even if we started listening for keystroke events.\r\n\r\nProbably, `event.preventDefault()` should be called to cancel this scrolling effect, but in this particular case I'm not calling this function.\r\n\r\nReact version: 18.2\r\n\r\n## Steps To Reproduce\r\n\r\nHere is the code on CodeSandbox that demonstrates the problem: \r\nhttps://codesandbox.io/s/onkeydown-arrow-scroll-problem-97e00l\r\n\r\n## The current behavior\r\n\r\nWhen `tabIndex` is specified, scrolling the `div` element using the left-right arrows from the keyboard stops.\r\n\r\n## The expected behavior\r\n\r\nAdding a `tabIndex` property and/or `onKeyDown` event handler should not affect the `div` scroll control capabilities. So the `div` should scroll with left-right arrows.",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25462/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25462/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25460",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25460/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25460/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25460/events",
"html_url": "https://github.com/facebook/react/pull/25460",
"id": 1403845693,
"node_id": "PR_kwDOAJy2Ks5Ah5Mk",
"number": 25460,
"title": "Separate EventPriority from Lane",
"user": {
  "login": "tyao1",
  "id": 5868353,
  "node_id": "MDQ6VXNlcjU4NjgzNTM=",
  "avatar_url": "https://avatars.githubusercontent.com/u/5868353?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/tyao1",
  "html_url": "https://github.com/tyao1",
  "followers_url": "https://api.github.com/users/tyao1/followers",
  "following_url": "https://api.github.com/users/tyao1/following{/other_user}",
  "gists_url": "https://api.github.com/users/tyao1/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/tyao1/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/tyao1/subscriptions",
  "organizations_url": "https://api.github.com/users/tyao1/orgs",
  "repos_url": "https://api.github.com/users/tyao1/repos",
  "events_url": "https://api.github.com/users/tyao1/events{/privacy}",
  "received_events_url": "https://api.github.com/users/tyao1/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 196858374,
    "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
    "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
    "name": "CLA Signed",
    "color": "e7e7e7",
    "default": false,
    "description": null
  },
  {
    "id": 1775958285,
    "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
    "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
    "name": "React Core Team",
    "color": "9149d1",
    "default": false,
    "description": "Opened by a member of the React Core Team"
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 0,
"created_at": "2022-10-11T00:33:00Z",
"updated_at": "2022-10-11T00:33:10Z",
"closed_at": null,
"author_association": "CONTRIBUTOR",
"active_lock_reason": null,
"draft": false,
"pull_request": {
  "url": "https://api.github.com/repos/facebook/react/pulls/25460",
  "html_url": "https://github.com/facebook/react/pull/25460",
  "diff_url": "https://github.com/facebook/react/pull/25460.diff",
  "patch_url": "https://github.com/facebook/react/pull/25460.patch",
  "merged_at": null
},
"body": "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test --prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\nBreaks down #25438, we are going to merge Default and Continuous lane into Sync lane, so EventPriority no longer maps to Lane  anymore. \r\n\r\n## How did you test this change?\r\n\r\n<!--\r\n  Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface.\r\n  How exactly did you verify that your PR solves the issue you wanted to solve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\r\nyarn test\r\nflow\r\nlint",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25460/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25460/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25459",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25459/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25459/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25459/events",
"html_url": "https://github.com/facebook/react/pull/25459",
"id": 1403763846,
"node_id": "PR_kwDOAJy2Ks5AhnvT",
"number": 25459,
"title": "Add IIFE bundle for SSR instruction streaming runtime",
"user": {
  "login": "mofeiZ",
  "id": 34200447,
  "node_id": "MDQ6VXNlcjM0MjAwNDQ3",
  "avatar_url": "https://avatars.githubusercontent.com/u/34200447?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/mofeiZ",
  "html_url": "https://github.com/mofeiZ",
  "followers_url": "https://api.github.com/users/mofeiZ/followers",
  "following_url": "https://api.github.com/users/mofeiZ/following{/other_user}",
  "gists_url": "https://api.github.com/users/mofeiZ/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/mofeiZ/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/mofeiZ/subscriptions",
  "organizations_url": "https://api.github.com/users/mofeiZ/orgs",
  "repos_url": "https://api.github.com/users/mofeiZ/repos",
  "events_url": "https://api.github.com/users/mofeiZ/events{/privacy}",
  "received_events_url": "https://api.github.com/users/mofeiZ/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 196858374,
    "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
    "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
    "name": "CLA Signed",
    "color": "e7e7e7",
    "default": false,
    "description": null
  },
  {
    "id": 1775958285,
    "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
    "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
    "name": "React Core Team",
    "color": "9149d1",
    "default": false,
    "description": "Opened by a member of the React Core Team"
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 1,
"created_at": "2022-10-10T22:16:08Z",
"updated_at": "2022-10-10T23:02:42Z",
"closed_at": null,
"author_association": "CONTRIBUTOR",
"active_lock_reason": null,
"draft": true,
"pull_request": {
  "url": "https://api.github.com/repos/facebook/react/pulls/25459",
  "html_url": "https://github.com/facebook/react/pull/25459",
  "diff_url": "https://github.com/facebook/react/pull/25459.diff",
  "patch_url": "https://github.com/facebook/react/pull/25459.patch",
  "merged_at": null
},
"body": "(Loosely followed #25436 to find what changes to make)\r\n\r\nWe're adding an option to Fizz to support an alternate output format that doesn't rely on inline script tags (see #25437). Part of this change involves publishing a minimal client runtime to observe and process SSR instructions.\r\n\r\nThis PR adds a new bundle \"instruction-streaming-runtime\", which will be compiled to an IIFE. \r\n- `instruction-streaming-runtime` will be published by React and be a standalone script that installs this minimal client runtime\r\n- #25437 will require a `runtimeSrc` param if the `enableFizzNoScriptExecution` is toggled (in SSR entrypoints params). We expect clients to pass a url to the `instruction-streaming-runtime` bundle here.",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25459/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25459/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25458",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25458/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25458/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25458/events",
"html_url": "https://github.com/facebook/react/issues/25458",
"id": 1403496479,
"node_id": "I_kwDOAJy2Ks5Tp6gf",
"number": 25458,
"title": "Bug: In StrictMode callback refs are called once",
"user": {
  "login": "domarmstrong",
  "id": 1533249,
  "node_id": "MDQ6VXNlcjE1MzMyNDk=",
  "avatar_url": "https://avatars.githubusercontent.com/u/1533249?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/domarmstrong",
  "html_url": "https://github.com/domarmstrong",
  "followers_url": "https://api.github.com/users/domarmstrong/followers",
  "following_url": "https://api.github.com/users/domarmstrong/following{/other_user}",
  "gists_url": "https://api.github.com/users/domarmstrong/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/domarmstrong/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/domarmstrong/subscriptions",
  "organizations_url": "https://api.github.com/users/domarmstrong/orgs",
  "repos_url": "https://api.github.com/users/domarmstrong/repos",
  "events_url": "https://api.github.com/users/domarmstrong/events{/privacy}",
  "received_events_url": "https://api.github.com/users/domarmstrong/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 155984160,
    "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
    "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
    "name": "Status: Unconfirmed",
    "color": "d4c5f9",
    "default": false,
    "description": "A potential issue that we haven't yet confirmed as a bug"
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 0,
"created_at": "2022-10-10T17:23:09Z",
"updated_at": "2022-10-10T17:23:09Z",
"closed_at": null,
"author_association": "NONE",
"active_lock_reason": null,
"body": "Hi. I'm running in to an issue in StrictMode with the fact that React is calling effects multiple times but then is only calling ref callbacks once. I believe this could be related to (if not the same issue as) https://github.com/facebook/react/issues/24670.\r\n\r\nReact version: 18.2.0\r\n\r\n## Steps To Reproduce\r\n\r\nThe code is contrived but it shows how it can introduce confusion.\r\n\r\nhttps://codesandbox.io/s/react-18-playground-forked-b3ql27?file=/src/App.tsx\r\n\r\n## The current behavior\r\n\r\nCallback refs are only called once even though effect cleanup is called on mount.\r\n\r\n## The expected behavior\r\n\r\nCallback refs are called again on simulated re-mount.\r\n\r\n\r\nUnfortunately dealing with StrictMode so far has not been a very nice DX. It seems to have added a whole additional cognitive overhead. It also seems to raise all sorts of very opaque bugs that take a bit of working through often without obvious solutions. Although I understand the reasoning it feels like a loaded footgun.",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25458/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25458/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25457",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25457/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25457/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25457/events",
"html_url": "https://github.com/facebook/react/pull/25457",
"id": 1403415304,
"node_id": "PR_kwDOAJy2Ks5AgcwX",
"number": 25457,
"title": "Extract Fizz instruction set to build macro",
"user": {
  "login": "acdlite",
  "id": 3624098,
  "node_id": "MDQ6VXNlcjM2MjQwOTg=",
  "avatar_url": "https://avatars.githubusercontent.com/u/3624098?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/acdlite",
  "html_url": "https://github.com/acdlite",
  "followers_url": "https://api.github.com/users/acdlite/followers",
  "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
  "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
  "organizations_url": "https://api.github.com/users/acdlite/orgs",
  "repos_url": "https://api.github.com/users/acdlite/repos",
  "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
  "received_events_url": "https://api.github.com/users/acdlite/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 196858374,
    "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
    "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
    "name": "CLA Signed",
    "color": "e7e7e7",
    "default": false,
    "description": null
  },
  {
    "id": 1775958285,
    "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
    "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
    "name": "React Core Team",
    "color": "9149d1",
    "default": false,
    "description": "Opened by a member of the React Core Team"
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 5,
"created_at": "2022-10-10T16:12:01Z",
"updated_at": "2022-10-10T20:58:15Z",
"closed_at": null,
"author_association": "MEMBER",
"active_lock_reason": null,
"draft": true,
"pull_request": {
  "url": "https://api.github.com/repos/facebook/react/pulls/25457",
  "html_url": "https://github.com/facebook/react/pull/25457",
  "diff_url": "https://github.com/facebook/react/pull/25457.diff",
  "patch_url": "https://github.com/facebook/react/pull/25457.patch",
  "merged_at": null
},
"body": "We're adding an option to Fizz to support an alternate output format that doesn't rely on inline script tags (see #25437). The two outputs will share the same \"instruction set\" of functions. These functions are currently inlined into the source file; to maintain a single source of truth, in preparation for the new option, this commit moves the instruction set to a separate file that is injected by the build system, similar to a macro.\r\n\r\nIn the future, we could improve this further by running Closure on the instruction set instead of hardcoding the output. This isn't an urgent improvement, though, because we rarely modify the instruction set.\r\n\r\nCo-authored-by: Mofei Zhang <feifei0@fb.com>",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25457/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25457/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25454",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25454/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25454/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25454/events",
"html_url": "https://github.com/facebook/react/pull/25454",
"id": 1402217391,
"node_id": "PR_kwDOAJy2Ks5AcjCF",
"number": 25454,
"title": "BREAKING CHANGE: Drop support for string refs",
"user": {
  "login": "eps1lon",
  "id": 12292047,
  "node_id": "MDQ6VXNlcjEyMjkyMDQ3",
  "avatar_url": "https://avatars.githubusercontent.com/u/12292047?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/eps1lon",
  "html_url": "https://github.com/eps1lon",
  "followers_url": "https://api.github.com/users/eps1lon/followers",
  "following_url": "https://api.github.com/users/eps1lon/following{/other_user}",
  "gists_url": "https://api.github.com/users/eps1lon/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/eps1lon/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/eps1lon/subscriptions",
  "organizations_url": "https://api.github.com/users/eps1lon/orgs",
  "repos_url": "https://api.github.com/users/eps1lon/repos",
  "events_url": "https://api.github.com/users/eps1lon/events{/privacy}",
  "received_events_url": "https://api.github.com/users/eps1lon/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 196858374,
    "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
    "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
    "name": "CLA Signed",
    "color": "e7e7e7",
    "default": false,
    "description": null
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 1,
"created_at": "2022-10-09T09:40:35Z",
"updated_at": "2022-10-09T09:53:06Z",
"closed_at": null,
"author_association": "COLLABORATOR",
"active_lock_reason": null,
"draft": false,
"pull_request": {
  "url": "https://api.github.com/repos/facebook/react/pulls/25454",
  "html_url": "https://github.com/facebook/react/pull/25454",
  "diff_url": "https://github.com/facebook/react/pull/25454.diff",
  "patch_url": "https://github.com/facebook/react/pull/25454.patch",
  "merged_at": null
},
"body": "Stacked on [#25383](https://github.com/facebook/react/pull/25383) ([Diff against #25383](https://github.com/facebook/react/compare/eps1lon:forwardRef/deprecate-string-refs-only...eps1lon:forwardRef/remove-string-refs))\r\n## Summary\r\n\r\nPart of https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md#deprecate-string-refs-and-remove-production-mode-_owner-field\r\n\r\nRemoves support for string refers which allows moving `_owner` to a non-enumerable, dev-only property (like `_self` and `_source`). \r\n`_owner` is still used by other dev-only warnings.\r\n\r\n## How did you test this change?\r\n\r\n- [x] CI",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25454/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25454/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25453",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25453/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25453/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25453/events",
"html_url": "https://github.com/facebook/react/pull/25453",
"id": 1402164570,
"node_id": "PR_kwDOAJy2Ks5AcZIX",
"number": 25453,
"title": "Refactor: use property shorthand",
"user": {
  "login": "zhangrenyang",
  "id": 3096013,
  "node_id": "MDQ6VXNlcjMwOTYwMTM=",
  "avatar_url": "https://avatars.githubusercontent.com/u/3096013?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/zhangrenyang",
  "html_url": "https://github.com/zhangrenyang",
  "followers_url": "https://api.github.com/users/zhangrenyang/followers",
  "following_url": "https://api.github.com/users/zhangrenyang/following{/other_user}",
  "gists_url": "https://api.github.com/users/zhangrenyang/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/zhangrenyang/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/zhangrenyang/subscriptions",
  "organizations_url": "https://api.github.com/users/zhangrenyang/orgs",
  "repos_url": "https://api.github.com/users/zhangrenyang/repos",
  "events_url": "https://api.github.com/users/zhangrenyang/events{/privacy}",
  "received_events_url": "https://api.github.com/users/zhangrenyang/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 196858374,
    "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
    "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
    "name": "CLA Signed",
    "color": "e7e7e7",
    "default": false,
    "description": null
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 1,
"created_at": "2022-10-09T06:06:40Z",
"updated_at": "2022-10-09T06:12:23Z",
"closed_at": null,
"author_association": "CONTRIBUTOR",
"active_lock_reason": null,
"draft": false,
"pull_request": {
  "url": "https://api.github.com/repos/facebook/react/pulls/25453",
  "html_url": "https://github.com/facebook/react/pull/25453",
  "diff_url": "https://github.com/facebook/react/pull/25453.diff",
  "patch_url": "https://github.com/facebook/react/pull/25453.patch",
  "merged_at": null
},
"body": "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test --prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!--\r\n Explain the **motivation** for making this change. What existing problem does the pull request solve?\r\n-->\r\n\r\n## How did you test this change?\r\n\r\n<!--\r\n  Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface.\r\n  How exactly did you verify that your PR solves the issue you wanted to solve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\r\n",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25453/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25453/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25452",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25452/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25452/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25452/events",
"html_url": "https://github.com/facebook/react/pull/25452",
"id": 1402093350,
"node_id": "PR_kwDOAJy2Ks5AcL09",
"number": 25452,
"title": "[react devtools] Device storage support",
"user": {
  "login": "rbalicki2",
  "id": 4277077,
  "node_id": "MDQ6VXNlcjQyNzcwNzc=",
  "avatar_url": "https://avatars.githubusercontent.com/u/4277077?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/rbalicki2",
  "html_url": "https://github.com/rbalicki2",
  "followers_url": "https://api.github.com/users/rbalicki2/followers",
  "following_url": "https://api.github.com/users/rbalicki2/following{/other_user}",
  "gists_url": "https://api.github.com/users/rbalicki2/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/rbalicki2/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/rbalicki2/subscriptions",
  "organizations_url": "https://api.github.com/users/rbalicki2/orgs",
  "repos_url": "https://api.github.com/users/rbalicki2/repos",
  "events_url": "https://api.github.com/users/rbalicki2/events{/privacy}",
  "received_events_url": "https://api.github.com/users/rbalicki2/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 196858374,
    "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
    "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
    "name": "CLA Signed",
    "color": "e7e7e7",
    "default": false,
    "description": null
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 1,
"created_at": "2022-10-08T23:23:03Z",
"updated_at": "2022-10-09T00:09:23Z",
"closed_at": null,
"author_association": "CONTRIBUTOR",
"active_lock_reason": null,
"draft": false,
"pull_request": {
  "url": "https://api.github.com/repos/facebook/react/pulls/25452",
  "html_url": "https://github.com/facebook/react/pull/25452",
  "diff_url": "https://github.com/facebook/react/pull/25452.diff",
  "patch_url": "https://github.com/facebook/react/pull/25452.patch",
  "merged_at": null
},
"body": "# Summary\r\n* This PR adds support for persisting certain settings to device storage, allowing e.g. RN apps to properly patch the console when restarted.\r\n  * The device storage APIs have signature `getValue(string)` and `setValue(string, string)`, and are thin wrappers around the `Library/Settings` turbomodule.\r\n* Pass device storage getters/setters from RN to DevTools' `connectToDevtools`. The setters are then used to populate values on `window`. Later, the console is patched using these values.\r\n* If we receive a notification from DevTools that the console patching fields have been updated, we write values back to local storage.\r\n* See https://github.com/facebook/react-native/pull/34903\r\n\r\n# How did you test this change?\r\nManual testing, `yarn run test-build-devtools`, `yarn run prettier`, `yarn run flow dom`\r\n\r\n## Manual testing setup:\r\n\r\n### React DevTools Frontend\r\n* Get the DevTools frontend in flipper:\r\n  * `nvm install -g react-devtools-core`, then replace that package with a symlink to the local package\r\n  * enable \"use globally installed devtools\" in flipper\r\n* yarn run start in react-devtools, etc. as well\r\n\r\n### React DevTools Backend\r\n* `yarn run build:backend` in react-devtools-core, then copy-paste that file to the expo app's node_modules directory\r\n\r\n### React Native\r\n* A local version of React Native can be patched in by modifying an expo app's package.json, as in `\"react-native\": \"rbalicki2/react-native#branch-name\"`\r\n\r\n# Versioning safety\r\n* There are three versioned modules to worry about: react native, the devtools frontend and the devtools backend.\r\n* The react devtools backend checks for whether a `cachedSettingsStore` is passed from react native. If not (e.g. if React Native is outdated), then no behavior changes.\r\n* The devtools backend reads the patched console values from the cached settings store. However, if nothing has been stored, for example because the frontend is outdated or has never synced its settings, then behavior doesn't change.\r\n* The devtools frontend sends no new messages. However, if it did send a new message (e.g. \"store this value at this key\"), and the backend was outdated, that message would be silently ignored.\r\n",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25452/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25452/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25449",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25449/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25449/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25449/events",
"html_url": "https://github.com/facebook/react/pull/25449",
"id": 1401794142,
"node_id": "PR_kwDOAJy2Ks5AbTst",
"number": 25449,
"title": "Updates dev.html to use react 18 createRoot API",
"user": {
  "login": "camsong",
  "id": 948896,
  "node_id": "MDQ6VXNlcjk0ODg5Ng==",
  "avatar_url": "https://avatars.githubusercontent.com/u/948896?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/camsong",
  "html_url": "https://github.com/camsong",
  "followers_url": "https://api.github.com/users/camsong/followers",
  "following_url": "https://api.github.com/users/camsong/following{/other_user}",
  "gists_url": "https://api.github.com/users/camsong/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/camsong/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/camsong/subscriptions",
  "organizations_url": "https://api.github.com/users/camsong/orgs",
  "repos_url": "https://api.github.com/users/camsong/repos",
  "events_url": "https://api.github.com/users/camsong/events{/privacy}",
  "received_events_url": "https://api.github.com/users/camsong/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 196858374,
    "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
    "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
    "name": "CLA Signed",
    "color": "e7e7e7",
    "default": false,
    "description": null
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 0,
"created_at": "2022-10-08T02:35:15Z",
"updated_at": "2022-10-08T02:35:19Z",
"closed_at": null,
"author_association": "CONTRIBUTOR",
"active_lock_reason": null,
"draft": false,
"pull_request": {
  "url": "https://api.github.com/repos/facebook/react/pulls/25449",
  "html_url": "https://github.com/facebook/react/pull/25449",
  "diff_url": "https://github.com/facebook/react/pull/25449.diff",
  "patch_url": "https://github.com/facebook/react/pull/25449.patch",
  "merged_at": null
},
"body": "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test --prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\nUpdates dev.html to use react 18 createRoot API\r\n\r\n## How did you test this change?\r\n\r\nchange ReactDOM.render to ReactDOM.createRoot. Open the html in chrome, and would find the warning disappeared.",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25449/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25449/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25448",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25448/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25448/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25448/events",
"html_url": "https://github.com/facebook/react/pull/25448",
"id": 1401754365,
"node_id": "PR_kwDOAJy2Ks5AbLsG",
"number": 25448,
"title": "[DevTools][standalone] Stop sending highlight events when a component is selected",
"user": {
  "login": "tyao1",
  "id": 5868353,
  "node_id": "MDQ6VXNlcjU4NjgzNTM=",
  "avatar_url": "https://avatars.githubusercontent.com/u/5868353?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/tyao1",
  "html_url": "https://github.com/tyao1",
  "followers_url": "https://api.github.com/users/tyao1/followers",
  "following_url": "https://api.github.com/users/tyao1/following{/other_user}",
  "gists_url": "https://api.github.com/users/tyao1/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/tyao1/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/tyao1/subscriptions",
  "organizations_url": "https://api.github.com/users/tyao1/orgs",
  "repos_url": "https://api.github.com/users/tyao1/repos",
  "events_url": "https://api.github.com/users/tyao1/events{/privacy}",
  "received_events_url": "https://api.github.com/users/tyao1/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 196858374,
    "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
    "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
    "name": "CLA Signed",
    "color": "e7e7e7",
    "default": false,
    "description": null
  },
  {
    "id": 1775958285,
    "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
    "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
    "name": "React Core Team",
    "color": "9149d1",
    "default": false,
    "description": "Opened by a member of the React Core Team"
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 0,
"created_at": "2022-10-07T23:59:11Z",
"updated_at": "2022-10-07T23:59:40Z",
"closed_at": null,
"author_association": "CONTRIBUTOR",
"active_lock_reason": null,
"draft": false,
"pull_request": {
  "url": "https://api.github.com/repos/facebook/react/pulls/25448",
  "html_url": "https://github.com/facebook/react/pull/25448",
  "diff_url": "https://github.com/facebook/react/pull/25448.diff",
  "patch_url": "https://github.com/facebook/react/pull/25448.patch",
  "merged_at": null
},
"body": "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test --prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!--\r\n Explain the **motivation** for making this change. What existing problem does the pull request solve?\r\n-->\r\nThe change only applies to standalone and brings the behavior in sync with the browser extension.\r\nIn https://github.com/facebook/react/pull/25106/files, we started to send new highlight events when a component is hovered, which is consistent with the browser extension. But in the browser extension, we don't keep highlighting a selected component. It was also causing some bad DX on RN, because there is no easy way to unselect an element.\r\nThe devtools frontend is also sending this `inspectElement` event every second when an element is selected, so removing the listener can also saves some CPU.\r\n\r\n\r\n## How did you test this change?\r\n\r\n<!--\r\n  Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface.\r\n  How exactly did you verify that your PR solves the issue you wanted to solve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\r\nSynced to a RN app locally, no highlight is shown anymore on a selected element.",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25448/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25448/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25447",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25447/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25447/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25447/events",
"html_url": "https://github.com/facebook/react/issues/25447",
"id": 1401637797,
"node_id": "I_kwDOAJy2Ks5Ti0ul",
"number": 25447,
"title": "[DevTools Bug]: Warnings are too \"loud\", mislabeled and make console difficult to use",
"user": {
  "login": "Sequoia",
  "id": 317498,
  "node_id": "MDQ6VXNlcjMxNzQ5OA==",
  "avatar_url": "https://avatars.githubusercontent.com/u/317498?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/Sequoia",
  "html_url": "https://github.com/Sequoia",
  "followers_url": "https://api.github.com/users/Sequoia/followers",
  "following_url": "https://api.github.com/users/Sequoia/following{/other_user}",
  "gists_url": "https://api.github.com/users/Sequoia/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/Sequoia/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/Sequoia/subscriptions",
  "organizations_url": "https://api.github.com/users/Sequoia/orgs",
  "repos_url": "https://api.github.com/users/Sequoia/repos",
  "events_url": "https://api.github.com/users/Sequoia/events{/privacy}",
  "received_events_url": "https://api.github.com/users/Sequoia/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 40929151,
    "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
    "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
    "name": "Type: Bug",
    "color": "b60205",
    "default": false,
    "description": null
  },
  {
    "id": 155984160,
    "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
    "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
    "name": "Status: Unconfirmed",
    "color": "d4c5f9",
    "default": false,
    "description": "A potential issue that we haven't yet confirmed as a bug"
  },
  {
    "id": 710573595,
    "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
    "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
    "name": "Component: Developer Tools",
    "color": "fbca04",
    "default": false,
    "description": null
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 2,
"created_at": "2022-10-07T20:28:41Z",
"updated_at": "2022-10-08T10:05:00Z",
"closed_at": null,
"author_association": "NONE",
"active_lock_reason": null,
"body": "### Website or app\r\n\r\nhttps://codesandbox.io/s/purple-moon-ts7xzs?file=/src/App.js\r\n\r\n### Repro steps\r\n\r\nIt's not causing this in the codesandbox probably due to some flag missing, but locally in dev I've been getting the following when a stray prop is passed to a dom elem as an attribute (_NB this output is **truncated**, this isn't even the whole message_):\r\n\r\n![Screen Shot 2022-10-07 at 10 39 51 AM](https://user-images.githubusercontent.com/317498/194645730-159ea8cf-7d7c-49f3-b5b3-7caaf5384b44.png)\r\n\r\n## Problems with the current logging approach\r\n\r\n1. **This floods the console and pushes all other messages out of screen, making debugging difficult.** This is the main issue.\r\n2. The severity/\"loudness\" of this log message is out of proportion to the issue. This is a fairly minor issue as it typically does not actually break anything, yet this log drowns out actual issues that I need to see more urgently\r\n3. This issue's importance is being misclassified & the wrong logging API used: `console.error` is being misused to log a warning. The purpose of different log levels is to allow the consumer (developer) to enable or disable logging of less important messages depending on their needs. Putting warnings in the \"error\" stream **takes this control away from developers**. When I am cleaning up upgrade issues, minor bugs etc. I will turn on warnings and see this, but when I'm trying to figure out why my GQL endpoints are erroring, I should be able to turn this off.\r\n\r\n## Ask\r\n\r\nMy goal is to stop this effectively \"breaking\" the error console, i.e. making it unusable by flooding it with messages. Possible approaches:\r\n\r\n1. move these warnings to console.warn, putting control back in the developer/consumer's hands\r\n2. flag to disable the stack traces so messages aren't so enormous\r\n3. use [console.groupCollapsed](https://developer.mozilla.org/en-US/docs/Web/API/console/groupCollapsed) to collapse these, so the stack is there but doesn't flood the console\r\n\r\n## FAQ\r\n\r\n### Why don't you just fix the errors? If you fix the errors, this isn't an issue. The solution is fix the errors.\r\n\r\nI don't mean to brag, but I work on applications with *lots* of errors. I truly wish I could fix every single one, but I must pick my battles and this often means letting smaller issues slide in order to focus on bigger ones. Furthermore, when working on a shared application, it can be out of your power to fix all the errors. There are several reasonable reasons why someone would want to work on their application and ignore certain errors, at least temporarily.\r\n\r\nIn any event, \"this is a valid error message so why should it be quieter\" doesn't address the question of *proportionality*. Should a warning like this overtake the whole console? Should it use `window.alert`? Should it bail out and crash the whole application? It's clear that these approaches to alerting the developer/consumer to an issue are not proportional with the severity of the issue itself, and these more drastic approaches would be inappropriate, even if they \"draw the developer/user's attention to the issue\" as this clearly does.  **Not every issue is p0** which is why we have log levels, and in this context different log streams (info, warning, and error).\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25447/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25447/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25446",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25446/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25446/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25446/events",
"html_url": "https://github.com/facebook/react/issues/25446",
"id": 1401051030,
"node_id": "I_kwDOAJy2Ks5TgleW",
"number": 25446,
"title": "Warning: ReactDOM.render is no longer supported in React 18 when using ReactTestUtils.renderIntoDocument",
"user": {
  "login": "raaaahman",
  "id": 16425382,
  "node_id": "MDQ6VXNlcjE2NDI1Mzgy",
  "avatar_url": "https://avatars.githubusercontent.com/u/16425382?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/raaaahman",
  "html_url": "https://github.com/raaaahman",
  "followers_url": "https://api.github.com/users/raaaahman/followers",
  "following_url": "https://api.github.com/users/raaaahman/following{/other_user}",
  "gists_url": "https://api.github.com/users/raaaahman/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/raaaahman/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/raaaahman/subscriptions",
  "organizations_url": "https://api.github.com/users/raaaahman/orgs",
  "repos_url": "https://api.github.com/users/raaaahman/repos",
  "events_url": "https://api.github.com/users/raaaahman/events{/privacy}",
  "received_events_url": "https://api.github.com/users/raaaahman/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 155984160,
    "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
    "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
    "name": "Status: Unconfirmed",
    "color": "d4c5f9",
    "default": false,
    "description": "A potential issue that we haven't yet confirmed as a bug"
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 2,
"created_at": "2022-10-07T11:47:20Z",
"updated_at": "2022-10-07T15:32:22Z",
"closed_at": null,
"author_association": "NONE",
"active_lock_reason": null,
"body": "React version: 18.2.0\r\nReactDOM version: 18.2.0\r\n\r\n## Steps To Reproduce\r\n\r\n1. Setup Jest\r\n2. Create a test file which calls to the `ReactTestUtils.renderIntoDocument`method\r\n3. Run jest\r\n\r\nExample code:\r\n\r\n```javascript\r\ntest('component should render', () => {\r\n  const container = renderIntoDocument(<MyComponent/>)\r\n\r\n  expect(findRenderedComponentWithType(container, MyComponent)).not.toBeNull()\r\n})\r\n```\r\n## The current behavior\r\n\r\nWhen using `ReactTestUtils.renderIntoDocument`in React 18, I have the following warning in the console, that make the test fail:\r\n\r\n> console.error\r\n>      Warning: ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot\r\n\r\nIt seems to come from this line in the source code: https://github.com/facebook/react/blob/7b25b961df878109a2b3810f33815249cae37ecc/packages/react-dom/src/test-utils/ReactTestUtils.js#L128\r\n\r\n## The expected behavior\r\n\r\nI expect the `ReactTestUtils.renderIntoDocument` method not to trigger a `console.error` and to return a DOM Node.\r\n\r\nI know most of the people are probably using `@testing-library/react` these days, should we expect the React Test Utilities to be deprecated soon?\r\n\r\nThank you for reading.",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25446/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25446/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25445",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25445/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25445/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25445/events",
"html_url": "https://github.com/facebook/react/issues/25445",
"id": 1400741806,
"node_id": "I_kwDOAJy2Ks5TfZ-u",
"number": 25445,
"title": "Bug: ",
"user": {
  "login": "Javio99",
  "id": 108767105,
  "node_id": "U_kgDOBnungQ",
  "avatar_url": "https://avatars.githubusercontent.com/u/108767105?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/Javio99",
  "html_url": "https://github.com/Javio99",
  "followers_url": "https://api.github.com/users/Javio99/followers",
  "following_url": "https://api.github.com/users/Javio99/following{/other_user}",
  "gists_url": "https://api.github.com/users/Javio99/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/Javio99/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/Javio99/subscriptions",
  "organizations_url": "https://api.github.com/users/Javio99/orgs",
  "repos_url": "https://api.github.com/users/Javio99/repos",
  "events_url": "https://api.github.com/users/Javio99/events{/privacy}",
  "received_events_url": "https://api.github.com/users/Javio99/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 155984160,
    "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
    "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
    "name": "Status: Unconfirmed",
    "color": "d4c5f9",
    "default": false,
    "description": "A potential issue that we haven't yet confirmed as a bug"
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 0,
"created_at": "2022-10-07T07:25:22Z",
"updated_at": "2022-10-07T07:25:41Z",
"closed_at": null,
"author_association": "NONE",
"active_lock_reason": null,
"body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version:\r\n\r\n## Steps To Reproduce\r\n\r\n1.\r\n2.\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\n\r\n## The expected behavior\r\n",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25445/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25445/timeline",
"performed_via_github_app": null,
"state_reason": "reopened"
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25443",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25443/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25443/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25443/events",
"html_url": "https://github.com/facebook/react/issues/25443",
"id": 1400306693,
"node_id": "I_kwDOAJy2Ks5TdvwF",
"number": 25443,
"title": "[Feature Request] exhaustive-deps linting rule: allow custom hooks to specify the index of their callback effect",
"user": {
  "login": "ReillyBova",
  "id": 33428722,
  "node_id": "MDQ6VXNlcjMzNDI4NzIy",
  "avatar_url": "https://avatars.githubusercontent.com/u/33428722?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/ReillyBova",
  "html_url": "https://github.com/ReillyBova",
  "followers_url": "https://api.github.com/users/ReillyBova/followers",
  "following_url": "https://api.github.com/users/ReillyBova/following{/other_user}",
  "gists_url": "https://api.github.com/users/ReillyBova/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/ReillyBova/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/ReillyBova/subscriptions",
  "organizations_url": "https://api.github.com/users/ReillyBova/orgs",
  "repos_url": "https://api.github.com/users/ReillyBova/repos",
  "events_url": "https://api.github.com/users/ReillyBova/events{/privacy}",
  "received_events_url": "https://api.github.com/users/ReillyBova/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 121709921,
    "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
    "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
    "name": "Type: Feature Request",
    "color": "c7def8",
    "default": false,
    "description": null
  },
  {
    "id": 1249821345,
    "node_id": "MDU6TGFiZWwxMjQ5ODIxMzQ1",
    "url": "https://api.github.com/repos/facebook/react/labels/Component:%20ESLint%20Rules",
    "name": "Component: ESLint Rules",
    "color": "f7afdb",
    "default": false,
    "description": ""
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 0,
"created_at": "2022-10-06T21:12:29Z",
"updated_at": "2022-10-08T09:09:04Z",
"closed_at": null,
"author_association": "NONE",
"active_lock_reason": null,
"body": "# Background\r\nCurrently, the `react-hooks/exhaustive-deps` linting rule allows developers to lint custom hooks. E.g.:\r\n\r\n```\r\n{\r\n  \"rules\": {\r\n    // ...\r\n    \"react-hooks/exhaustive-deps\": [\"warn\", {\r\n      \"additionalHooks\": \"(useMyCustomHook|useMyOtherCustomHook)\"\r\n    }]\r\n  }\r\n}\r\n```\r\n\r\nWhile the [official documentation](https://www.npmjs.com/package/eslint-plugin-react-hooks) for this configuration states \"We suggest to use this option **very sparingly, if at all**\", there are nonetheless certain custom hook cases that necessitate such an approach. Consider the following scenario: (1) a callback needs to hook into an external system (thus requiring an effect), (2) the callback has dependencies on state / props and needs to reexecute when those change, (3) executing that callback can be arbitrarily expensive, so re-executing every render is not an option.\r\n\r\n# Motivation\r\nTo meet this challenge, we have two options: (1) treat the callback reference as sufficiently reactive (by this I mean, referentially stable unless a dependency has changed) — in other words, we assume the user of the hook is passing in a callback that was defined via useCallback, with the appropriate dependencies; (2) accept dependencies in the custom hook itself, wrap the function in a `useEvent` / `useEventHandler` style hook for referential stability, apply the dependencies to whatever effect the function is then executed within.\r\n\r\nIf we go with option (1) we have an obvious shortcoming — there's no way to ensure the user is wrapping their callback in useCallback. From personal experience on a large industry project with lots of developers, this is just not a viable option. Option (2) on the other hand meets all our needs, and via the `additionalHooks` config, we can ensure correctness by linting for exhaustive dependencies.\r\n\r\n# The Problem\r\nGreat! We've met our challenge with a robust solution and easy to use solution, however...... what if our hook accepts a third, or fourth arg? Well, the [current implementation](https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/ExhaustiveDeps.js#L1737) of exhaustive-deps only allows for the [callback, deps] args to occupy arg0 and arg1 of our custom hook (e.g., `useCustomHook(effectCallback, effectDeps)`). While we can still get everything to \"work\", this because more than a minor headache if a hypothetical arg2 we want to add contains some of the most important contextual information. This pain is particularly acute because callbacks are (preferably) defined inline within hooks, and so they'll have a tendency push any succeeding args pretty far down, making them almost seem irrelevant.\r\n\r\n## An example from React\r\nWhile this is ultimately an issue of style, the resulting requirement forces custom hooks that need the exhaustive deps rule into a very awkward argument pattern. It seems I'm not alone, as React's own [`useImperativeHandle`](https://reactjs.org/docs/hooks-reference.html#useimperativehandle) seems to agree in the preferred structure for hooks that accept effectful callbacks with deps. In the case of useImperativeHandle, the most important, unique, and concise value — the `ref` — is passed first, and only then followed by the more verbose and less information-dense callback + deps args.\r\n\r\n## The Proposal\r\nAllowing developers to add their custom hooks to the linting tool is genuinely useful, but it does come with the significant caveat that the effect and deps have to be used as the first two args. I propose either of the following revisions:\r\n\r\n1. The additionalHooks rule be modified to alternatively accept an object of the form `{ [callbackArgIndex: number]: customHookRegex }`. For instance, adding a rule for `useImperativeHandle` would look like\r\n```\r\n\"additionalHooks\": { 1: \"useImperativeHandle\" }\"\r\n```\r\n\r\n2. Instead, the behavior of the rule should be altered to assume that the callback and the dependencies occupy the final two arguments of any given custom hook. This pattern seems consistent with how all native hooks with callback-deps patterns are defined, and so it seems to be a better \"default assumption\" over the current approach. \r\n\r\nIf this proposal is not moved forward with, I highly recommend that the documentation for the linting rule at least be updated to clarify that the linted callback and dependencies must occupy the first two arguments of any custom hook. Mine was failing silently and it took a deep dive into the implementation to understand what was going on!",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25443/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25443/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25440",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25440/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25440/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25440/events",
"html_url": "https://github.com/facebook/react/pull/25440",
"id": 1398859898,
"node_id": "PR_kwDOAJy2Ks5ARWD1",
"number": 25440,
"title": "react-hooks: Rules of Hooks now considers component declarations inside JSX attributes",
"user": {
  "login": "eps1lon",
  "id": 12292047,
  "node_id": "MDQ6VXNlcjEyMjkyMDQ3",
  "avatar_url": "https://avatars.githubusercontent.com/u/12292047?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/eps1lon",
  "html_url": "https://github.com/eps1lon",
  "followers_url": "https://api.github.com/users/eps1lon/followers",
  "following_url": "https://api.github.com/users/eps1lon/following{/other_user}",
  "gists_url": "https://api.github.com/users/eps1lon/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/eps1lon/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/eps1lon/subscriptions",
  "organizations_url": "https://api.github.com/users/eps1lon/orgs",
  "repos_url": "https://api.github.com/users/eps1lon/repos",
  "events_url": "https://api.github.com/users/eps1lon/events{/privacy}",
  "received_events_url": "https://api.github.com/users/eps1lon/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 196858374,
    "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
    "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
    "name": "CLA Signed",
    "color": "e7e7e7",
    "default": false,
    "description": null
  },
  {
    "id": 1249821345,
    "node_id": "MDU6TGFiZWwxMjQ5ODIxMzQ1",
    "url": "https://api.github.com/repos/facebook/react/labels/Component:%20ESLint%20Rules",
    "name": "Component: ESLint Rules",
    "color": "f7afdb",
    "default": false,
    "description": ""
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 1,
"created_at": "2022-10-06T05:59:09Z",
"updated_at": "2022-10-06T06:53:21Z",
"closed_at": null,
"author_association": "COLLABORATOR",
"active_lock_reason": null,
"draft": false,
"pull_request": {
  "url": "https://api.github.com/repos/facebook/react/pulls/25440",
  "html_url": "https://github.com/facebook/react/pull/25440",
  "diff_url": "https://github.com/facebook/react/pull/25440.diff",
  "patch_url": "https://github.com/facebook/react/pull/25440.patch",
  "merged_at": null
},
"body": "\r\n\r\n## Summary\r\n\r\nNoticed during work in https://github.com/facebook/react/pull/25360.\r\n\r\nCurrent the below code will trigger rules of hooks with \"hooks can only be called at the top level\" despite the hook being called in something that looks like a component.\r\n```jsx\r\nfunction JSXApp() {\r\n  return (\r\n    <Child\r\n      Component={() => {\r\n        const [myState, setMyState] = useState(null);\r\n      }}\r\n    />\r\n  );\r\n}\r\n```\r\n\r\nThe above code is equivalent to the code below where we already apply Rules of Hooks\r\n```js\r\nfunction App() {\r\n  return createElement(Child, {\r\n    Component: () => {\r\n      const [myState, setMyState] = useState(null);\r\n    },\r\n  });\r\n}\r\n```\r\n\r\nIt's kind of neat to not apply rules of hook the components in JSX attributes since this can prevent declaration of nested components. But the error message wouldn't make sense and it would also flag component declarations in JSX elements that are not created during render.\r\n\r\nThe idea is to release this and https://github.com/facebook/react/pull/25360 together (though https://github.com/facebook/react/pull/25360 would need some rework if this PR is merged to also consider JSXAttributes). \r\n\r\n## How did you test this change?\r\n\r\n- [x] Added tests\r\n- [x] https://github.com/mui/material-ui/\r\n- [x] Klarna monorepo",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25440/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25440/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25438",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25438/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25438/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25438/events",
"html_url": "https://github.com/facebook/react/pull/25438",
"id": 1398519900,
"node_id": "PR_kwDOAJy2Ks5AQLcD",
"number": 25438,
"title": "[WIP] Unify default lane with sync lane",
"user": {
  "login": "tyao1",
  "id": 5868353,
  "node_id": "MDQ6VXNlcjU4NjgzNTM=",
  "avatar_url": "https://avatars.githubusercontent.com/u/5868353?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/tyao1",
  "html_url": "https://github.com/tyao1",
  "followers_url": "https://api.github.com/users/tyao1/followers",
  "following_url": "https://api.github.com/users/tyao1/following{/other_user}",
  "gists_url": "https://api.github.com/users/tyao1/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/tyao1/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/tyao1/subscriptions",
  "organizations_url": "https://api.github.com/users/tyao1/orgs",
  "repos_url": "https://api.github.com/users/tyao1/repos",
  "events_url": "https://api.github.com/users/tyao1/events{/privacy}",
  "received_events_url": "https://api.github.com/users/tyao1/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 196858374,
    "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
    "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
    "name": "CLA Signed",
    "color": "e7e7e7",
    "default": false,
    "description": null
  },
  {
    "id": 1775958285,
    "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
    "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
    "name": "React Core Team",
    "color": "9149d1",
    "default": false,
    "description": "Opened by a member of the React Core Team"
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 1,
"created_at": "2022-10-05T23:57:28Z",
"updated_at": "2022-10-10T02:37:42Z",
"closed_at": null,
"author_association": "CONTRIBUTOR",
"active_lock_reason": null,
"draft": true,
"pull_request": {
  "url": "https://api.github.com/repos/facebook/react/pulls/25438",
  "html_url": "https://github.com/facebook/react/pull/25438",
  "diff_url": "https://github.com/facebook/react/pull/25438.diff",
  "patch_url": "https://github.com/facebook/react/pull/25438.patch",
  "merged_at": null
},
"body": "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test --prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!--\r\n Explain the **motivation** for making this change. What existing problem does the pull request solve?\r\n-->\r\nWe want to unify DefaultLane, SyncLane, and ContinuousLane into just SyncLane, and use a separate field on the root to track whether they should be scheduled with queueMicrotask, requestAnimationFrame, or completely synchronously (in the case of flushSync).\r\nThis PR is for unifying DefaultLane and SyncLane.\r\n\r\nThe main change is that EventPriorities no longer strictly maps to Lane. Instead, it also contains extra bits for `UpdateType`, so that we can distinguish DefaultUpdate from DiscreteUpdate since now they both are on the sync lane.\r\n\r\nTODO:\r\n\r\n- [ ]  Still a lot of test failure need to figure out\r\n\r\n## How did you test this change?\r\n\r\n<!--\r\n  Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface.\r\n  How exactly did you verify that your PR solves the issue you wanted to solve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\r\n",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25438/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25438/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25437",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25437/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25437/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25437/events",
"html_url": "https://github.com/facebook/react/pull/25437",
"id": 1398431861,
"node_id": "PR_kwDOAJy2Ks5AP4SX",
"number": 25437,
"title": "[ServerRenderer][draft] Add option to send instructions as data attributes",
"user": {
  "login": "mofeiZ",
  "id": 34200447,
  "node_id": "MDQ6VXNlcjM0MjAwNDQ3",
  "avatar_url": "https://avatars.githubusercontent.com/u/34200447?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/mofeiZ",
  "html_url": "https://github.com/mofeiZ",
  "followers_url": "https://api.github.com/users/mofeiZ/followers",
  "following_url": "https://api.github.com/users/mofeiZ/following{/other_user}",
  "gists_url": "https://api.github.com/users/mofeiZ/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/mofeiZ/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/mofeiZ/subscriptions",
  "organizations_url": "https://api.github.com/users/mofeiZ/orgs",
  "repos_url": "https://api.github.com/users/mofeiZ/repos",
  "events_url": "https://api.github.com/users/mofeiZ/events{/privacy}",
  "received_events_url": "https://api.github.com/users/mofeiZ/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 196858374,
    "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
    "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
    "name": "CLA Signed",
    "color": "e7e7e7",
    "default": false,
    "description": null
  },
  {
    "id": 1775958285,
    "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
    "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
    "name": "React Core Team",
    "color": "9149d1",
    "default": false,
    "description": "Opened by a member of the React Core Team"
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 1,
"created_at": "2022-10-05T22:01:25Z",
"updated_at": "2022-10-10T14:50:49Z",
"closed_at": null,
"author_association": "CONTRIBUTOR",
"active_lock_reason": null,
"draft": true,
"pull_request": {
  "url": "https://api.github.com/repos/facebook/react/pulls/25437",
  "html_url": "https://github.com/facebook/react/pull/25437",
  "diff_url": "https://github.com/facebook/react/pull/25437.diff",
  "patch_url": "https://github.com/facebook/react/pull/25437.patch",
  "merged_at": null
},
"body": "Would love to get some feedback on this before writing tests. \r\n\r\n### Changes made:\r\n- Running with enableFizzNoScriptExecution (feature flag) and disableInstructionExecution (param) will generate the following\r\n```\r\n<div hidden data-react-server-instruction='[\"$INSTR\", \"arg0\", \"arg1\"]'></div>\r\n```\r\n\r\n###  What's left\r\n- Add `disableInstructionExecution` as an entrypoint parameter\r\n- Add a MutationObserver implementation\r\n  - Would this belong in react-dom-bindings/client, or somewhere else completely?\r\n  - Since HTML generated by React might be inserted into a shell on the client, should this recursively watch for all added nodes (in all subtrees), or should users be able to pass in some Node to watch? I might be completely misunderstanding what's happening here (e.g. are these instruction elements always top level because of how streaming works?)\r\n- Add ^ to test setup (when using Meta's feature flags)\r\n  (Tests like `ReactDOMFizzServer-test.js` should be reusable here)\r\n\r\n<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test --prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!--\r\n Explain the **motivation** for making this change. What existing problem does the pull request solve?\r\n-->\r\n\r\n## How did you test this change?\r\n\r\n<!--\r\n  Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface.\r\n  How exactly did you verify that your PR solves the issue you wanted to solve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\r\n",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25437/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25437/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25435",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25435/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25435/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25435/events",
"html_url": "https://github.com/facebook/react/pull/25435",
"id": 1398114089,
"node_id": "PR_kwDOAJy2Ks5AO0EG",
"number": 25435,
"title": "chore: add cache for eslint",
"user": {
  "login": "c0dedance",
  "id": 38075730,
  "node_id": "MDQ6VXNlcjM4MDc1NzMw",
  "avatar_url": "https://avatars.githubusercontent.com/u/38075730?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/c0dedance",
  "html_url": "https://github.com/c0dedance",
  "followers_url": "https://api.github.com/users/c0dedance/followers",
  "following_url": "https://api.github.com/users/c0dedance/following{/other_user}",
  "gists_url": "https://api.github.com/users/c0dedance/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/c0dedance/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/c0dedance/subscriptions",
  "organizations_url": "https://api.github.com/users/c0dedance/orgs",
  "repos_url": "https://api.github.com/users/c0dedance/repos",
  "events_url": "https://api.github.com/users/c0dedance/events{/privacy}",
  "received_events_url": "https://api.github.com/users/c0dedance/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 196858374,
    "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
    "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
    "name": "CLA Signed",
    "color": "e7e7e7",
    "default": false,
    "description": null
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 1,
"created_at": "2022-10-05T17:14:23Z",
"updated_at": "2022-10-05T17:19:35Z",
"closed_at": null,
"author_association": "NONE",
"active_lock_reason": null,
"draft": false,
"pull_request": {
  "url": "https://api.github.com/repos/facebook/react/pulls/25435",
  "html_url": "https://github.com/facebook/react/pull/25435",
  "diff_url": "https://github.com/facebook/react/pull/25435.diff",
  "patch_url": "https://github.com/facebook/react/pull/25435.patch",
  "merged_at": null
},
"body": "Store the info about processed files in order to only operate on the changed ones. The cache is stored in .eslintcache by default. Enabling this option can dramatically improve ESLint’s running time by ensuring that only changed files are linted.",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25435/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25435/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25427",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25427/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25427/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25427/events",
"html_url": "https://github.com/facebook/react/issues/25427",
"id": 1397470538,
"node_id": "I_kwDOAJy2Ks5TS7VK",
"number": 25427,
"title": "[DevTools Bug]: Hook parsing failed for default Next.js configuration",
"user": {
  "login": "rossng",
  "id": 565371,
  "node_id": "MDQ6VXNlcjU2NTM3MQ==",
  "avatar_url": "https://avatars.githubusercontent.com/u/565371?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/rossng",
  "html_url": "https://github.com/rossng",
  "followers_url": "https://api.github.com/users/rossng/followers",
  "following_url": "https://api.github.com/users/rossng/following{/other_user}",
  "gists_url": "https://api.github.com/users/rossng/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/rossng/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/rossng/subscriptions",
  "organizations_url": "https://api.github.com/users/rossng/orgs",
  "repos_url": "https://api.github.com/users/rossng/repos",
  "events_url": "https://api.github.com/users/rossng/events{/privacy}",
  "received_events_url": "https://api.github.com/users/rossng/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 40929151,
    "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
    "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
    "name": "Type: Bug",
    "color": "b60205",
    "default": false,
    "description": null
  },
  {
    "id": 155984160,
    "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
    "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
    "name": "Status: Unconfirmed",
    "color": "d4c5f9",
    "default": false,
    "description": "A potential issue that we haven't yet confirmed as a bug"
  },
  {
    "id": 710573595,
    "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
    "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
    "name": "Component: Developer Tools",
    "color": "fbca04",
    "default": false,
    "description": null
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 0,
"created_at": "2022-10-05T09:00:01Z",
"updated_at": "2022-10-05T09:02:09Z",
"closed_at": null,
"author_association": "NONE",
"active_lock_reason": null,
"body": "### Website or app\r\n\r\nhttps://github.com/vercel/next.js/tree/canary/examples/blog-starter\r\n\r\n### Repro steps\r\n\r\n1. Create an instance of the official Next.js blog starter template, e.g. `yarn create next-app --example blog-starter blog-starter`\r\n2. Run `yarn dev` (or equivalent) inside the created project.\r\n3. Go to the webpage (normally `http://localhost:3000`) and open the React devtools\r\n4. Enable 'Always parse hook names from source' in the devtool options\r\n5. Observe the error 'Hook parsing failed':\r\n    <img width=\"669\" alt=\"image\" src=\"https://user-images.githubusercontent.com/565371/194022450-1b32305a-b2bc-42bc-ac4d-ed389e9fdc74.png\">\r\n\r\nNote: Next.js does not allow you to change the source map format (`devtool`) setting so it's rather difficult to work around this issue.\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25427/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25427/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25415",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25415/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25415/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25415/events",
"html_url": "https://github.com/facebook/react/issues/25415",
"id": 1396477074,
"node_id": "I_kwDOAJy2Ks5TPIyS",
"number": 25415,
"title": "[DevTools Bug]: \"Message length exceeded maximum allowed length\" when profiling a complex application",
"user": {
  "login": "joshkel",
  "id": 476338,
  "node_id": "MDQ6VXNlcjQ3NjMzOA==",
  "avatar_url": "https://avatars.githubusercontent.com/u/476338?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/joshkel",
  "html_url": "https://github.com/joshkel",
  "followers_url": "https://api.github.com/users/joshkel/followers",
  "following_url": "https://api.github.com/users/joshkel/following{/other_user}",
  "gists_url": "https://api.github.com/users/joshkel/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/joshkel/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/joshkel/subscriptions",
  "organizations_url": "https://api.github.com/users/joshkel/orgs",
  "repos_url": "https://api.github.com/users/joshkel/repos",
  "events_url": "https://api.github.com/users/joshkel/events{/privacy}",
  "received_events_url": "https://api.github.com/users/joshkel/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 40929151,
    "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
    "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
    "name": "Type: Bug",
    "color": "b60205",
    "default": false,
    "description": null
  },
  {
    "id": 155984160,
    "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
    "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
    "name": "Status: Unconfirmed",
    "color": "d4c5f9",
    "default": false,
    "description": "A potential issue that we haven't yet confirmed as a bug"
  },
  {
    "id": 710573595,
    "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
    "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
    "name": "Component: Developer Tools",
    "color": "fbca04",
    "default": false,
    "description": null
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 2,
"created_at": "2022-10-04T15:31:21Z",
"updated_at": "2022-10-06T15:59:16Z",
"closed_at": null,
"author_association": "NONE",
"active_lock_reason": null,
"body": "### Website or app\n\nN/A\n\n### Repro steps\n\nWhen profiling a complex, proprietary app, I regularly get an error message, \"Message length exceeded maximum allowed length.\"\r\n\r\nSteps to reproduce:\r\n\r\n1. Within the Dev Tools, go to the Profiler tab.\r\n2. Click the \"Start Profiling\" button.\r\n3. Let the app run for a bit. Do some things in the app.\r\n4. Click the \"Stop Profiling\" (\"record\") button.\r\n\r\nAt this point, the Chrome Dev Tools console logs an error:\r\n\r\n```\r\ncontentScript.js:116 Uncaught Error: Message length exceeded maximum allowed length.\r\n    at handleMessageFromPage (contentScript.js:116:10)\r\n```\r\n\r\nAnd the Profiler tab is stuck with the message, \"Processing data... This should only take a minute.\"\r\n\r\nThe error is thrown from https://github.com/facebook/react/blob/64fe791be84ad04a4a1d005376ba5cf5701db9b7/packages/react-devtools-extensions/src/contentScript.js#L36\r\n\r\nThe last time this occurred, when breaking on exceptions at that line, `JSON.stringify(event.data.payload).length` reports 92074565. I can provide further information on the contents of the problematic `event.data.payload` if that would be helpful.\r\n\r\nI apologize for the lack of a reproducible test case - it's a complex app (which is why I was looking into profiling), and I don't think I could simplify it down to a public test case while triggering the error.\n\n### How often does this bug happen?\n\nOften\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25415/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25415/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25391",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25391/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25391/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25391/events",
"html_url": "https://github.com/facebook/react/issues/25391",
"id": 1396194901,
"node_id": "I_kwDOAJy2Ks5TOD5V",
"number": 25391,
"title": "Remove alternate tree DOM element retainers to help with memory leak investigations",
"user": {
  "login": "ling1726",
  "id": 20744592,
  "node_id": "MDQ6VXNlcjIwNzQ0NTky",
  "avatar_url": "https://avatars.githubusercontent.com/u/20744592?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/ling1726",
  "html_url": "https://github.com/ling1726",
  "followers_url": "https://api.github.com/users/ling1726/followers",
  "following_url": "https://api.github.com/users/ling1726/following{/other_user}",
  "gists_url": "https://api.github.com/users/ling1726/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/ling1726/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/ling1726/subscriptions",
  "organizations_url": "https://api.github.com/users/ling1726/orgs",
  "repos_url": "https://api.github.com/users/ling1726/repos",
  "events_url": "https://api.github.com/users/ling1726/events{/privacy}",
  "received_events_url": "https://api.github.com/users/ling1726/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [

],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 0,
"created_at": "2022-10-04T12:29:25Z",
"updated_at": "2022-10-04T12:35:00Z",
"closed_at": null,
"author_association": "NONE",
"active_lock_reason": null,
"body": "Hi,\r\n\r\n#16087, #15157 (and other issues) point out that React keeps an alternate tree that can retain DOM elements in fibers such as the `stateNode` property. This can make it hard to debug memory leaks in larger sites/applications since they are a false positive.\r\n\r\nTo make the investigation process easier, would it be possible to recommend/suggest a way to somehow clean up the retainers in alternate fiber so that there is less noise?\r\n\r\nWe have some tools that do this to more or less successfully by paring the fiber tree and setting `alternate.stateNode` to `null`.\r\n\r\nI understand that fibers are internal API and that anything retained in alternate tree should fix itself eventually if the userland code is not leaky. However when there are leaks in userland the alternate tree can make root causing real memory leaks quite hard, even for those who are aware that retention in alternate trees is expected and a normal behaviour of React.",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25391/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25391/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25387",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25387/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25387/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25387/events",
"html_url": "https://github.com/facebook/react/pull/25387",
"id": 1394858751,
"node_id": "PR_kwDOAJy2Ks5AD_OM",
"number": 25387,
"title": "Remove feature flag enableStrictEffects",
"user": {
  "login": "sammy-SC",
  "id": 1733610,
  "node_id": "MDQ6VXNlcjE3MzM2MTA=",
  "avatar_url": "https://avatars.githubusercontent.com/u/1733610?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/sammy-SC",
  "html_url": "https://github.com/sammy-SC",
  "followers_url": "https://api.github.com/users/sammy-SC/followers",
  "following_url": "https://api.github.com/users/sammy-SC/following{/other_user}",
  "gists_url": "https://api.github.com/users/sammy-SC/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/sammy-SC/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/sammy-SC/subscriptions",
  "organizations_url": "https://api.github.com/users/sammy-SC/orgs",
  "repos_url": "https://api.github.com/users/sammy-SC/repos",
  "events_url": "https://api.github.com/users/sammy-SC/events{/privacy}",
  "received_events_url": "https://api.github.com/users/sammy-SC/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 196858374,
    "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
    "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
    "name": "CLA Signed",
    "color": "e7e7e7",
    "default": false,
    "description": null
  },
  {
    "id": 1775958285,
    "node_id": "MDU6TGFiZWwxNzc1OTU4Mjg1",
    "url": "https://api.github.com/repos/facebook/react/labels/React%20Core%20Team",
    "name": "React Core Team",
    "color": "9149d1",
    "default": false,
    "description": "Opened by a member of the React Core Team"
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 2,
"created_at": "2022-10-03T14:42:26Z",
"updated_at": "2022-10-11T15:25:14Z",
"closed_at": null,
"author_association": "CONTRIBUTOR",
"active_lock_reason": null,
"draft": false,
"pull_request": {
  "url": "https://api.github.com/repos/facebook/react/pulls/25387",
  "html_url": "https://github.com/facebook/react/pull/25387",
  "diff_url": "https://github.com/facebook/react/pull/25387.diff",
  "patch_url": "https://github.com/facebook/react/pull/25387.patch",
  "merged_at": null
},
"body": "`enableStrictEffects` has been shipped everywhere except React Native OSS. Let's ship it to get consistent behaviour of StrictMode and remove unnecessary feature flag.",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25387/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25387/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25384",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25384/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25384/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25384/events",
"html_url": "https://github.com/facebook/react/issues/25384",
"id": 1394020294,
"node_id": "I_kwDOAJy2Ks5TFw_G",
"number": 25384,
"title": "Bug: state changes of input[type='number'] value doesn't update real DOM",
"user": {
  "login": "cdpark0530",
  "id": 54495831,
  "node_id": "MDQ6VXNlcjU0NDk1ODMx",
  "avatar_url": "https://avatars.githubusercontent.com/u/54495831?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/cdpark0530",
  "html_url": "https://github.com/cdpark0530",
  "followers_url": "https://api.github.com/users/cdpark0530/followers",
  "following_url": "https://api.github.com/users/cdpark0530/following{/other_user}",
  "gists_url": "https://api.github.com/users/cdpark0530/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/cdpark0530/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/cdpark0530/subscriptions",
  "organizations_url": "https://api.github.com/users/cdpark0530/orgs",
  "repos_url": "https://api.github.com/users/cdpark0530/repos",
  "events_url": "https://api.github.com/users/cdpark0530/events{/privacy}",
  "received_events_url": "https://api.github.com/users/cdpark0530/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 155984160,
    "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
    "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
    "name": "Status: Unconfirmed",
    "color": "d4c5f9",
    "default": false,
    "description": "A potential issue that we haven't yet confirmed as a bug"
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 0,
"created_at": "2022-10-03T02:11:29Z",
"updated_at": "2022-10-03T02:11:29Z",
"closed_at": null,
"author_association": "NONE",
"active_lock_reason": null,
"body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nThe problem is that state changes going into `value` prop of `input[type=\"number\"]` don't update(synchronize) real DOM. Regardless of what type of `value` that `input[type=\"number\"]` expects in internal implementation, (based on what I observed) it's showing inconsistent behavior.\r\nThis bug has been happening since very old version in my experience, and github issues about this are still open:\r\n> https://github.com/facebook/react/issues/9402: A number input will always have left pad 0 though parseFloat value in onChange\r\n> https://github.com/facebook/react/issues/13651: input[type='number'] value isn't updated\r\n\r\nI'm writing this new bug report since they point out derived errors not its fundamental problem.\r\n\r\nReact version:\r\n18.2.0\r\n\r\n## Steps To Reproduce\r\n\r\n1. create `input[type=\"number\"]` and set `value` with state of type `number|undefined`, default empty string.\r\n2. set `onChange`(or `onInput`) handler and change the `number|undefined` state on typing.\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https://codesandbox.io/s/input-type-number-bug-bosfmv?file=/src/App.tsx\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior: when setting `number` on `value` with default empty `string`\r\nReal DOM shows left pad 0. https://github.com/facebook/react/issues/9402 and https://github.com/facebook/react/issues/13651 talk about this. Putting stringified value is workaround as https://github.com/facebook/react/issues/13651#issuecomment-727244841 mentioned.\r\n\r\n## The expected behavior: when setting `number` on `value` with default empty `string`\r\nReal DOM should show actual `value` even if the type of initial value is `string`. For example, when the `value` is type of `number`, it should show the number without left pad 0.\r\n\r\n## The current behavior: when setting stringified `number` on `value` with default empty `string`\r\nReal DOM doesn't show the value that you set on `value`.\r\n(Please look up above codesandbox link)\r\nPutting `123--`(or whatever invalid number format you can put) results setting `undefined` on the state type of `number`, which results setting empty `string` on `value`. But it still shows `123--`.\r\n\r\n## The expected behavior: when setting stringified `number` on `value` with default empty `string`\r\nReal DOM should show the value that you set on `value`.",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25384/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25384/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25383",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25383/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25383/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25383/events",
"html_url": "https://github.com/facebook/react/pull/25383",
"id": 1393788413,
"node_id": "PR_kwDOAJy2Ks5AAcxA",
"number": 25383,
"title": "Turn on string ref deprecation warning for everybody (not codemoddable)",
"user": {
  "login": "eps1lon",
  "id": 12292047,
  "node_id": "MDQ6VXNlcjEyMjkyMDQ3",
  "avatar_url": "https://avatars.githubusercontent.com/u/12292047?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/eps1lon",
  "html_url": "https://github.com/eps1lon",
  "followers_url": "https://api.github.com/users/eps1lon/followers",
  "following_url": "https://api.github.com/users/eps1lon/following{/other_user}",
  "gists_url": "https://api.github.com/users/eps1lon/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/eps1lon/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/eps1lon/subscriptions",
  "organizations_url": "https://api.github.com/users/eps1lon/orgs",
  "repos_url": "https://api.github.com/users/eps1lon/repos",
  "events_url": "https://api.github.com/users/eps1lon/events{/privacy}",
  "received_events_url": "https://api.github.com/users/eps1lon/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 196858374,
    "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
    "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
    "name": "CLA Signed",
    "color": "e7e7e7",
    "default": false,
    "description": null
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 1,
"created_at": "2022-10-02T14:37:59Z",
"updated_at": "2022-10-09T09:16:02Z",
"closed_at": null,
"author_association": "COLLABORATOR",
"active_lock_reason": null,
"draft": false,
"pull_request": {
  "url": "https://api.github.com/repos/facebook/react/pulls/25383",
  "html_url": "https://github.com/facebook/react/pull/25383",
  "diff_url": "https://github.com/facebook/react/pull/25383.diff",
  "patch_url": "https://github.com/facebook/react/pull/25383.patch",
  "merged_at": null
},
"body": "\r\n\r\n## Summary\r\n \r\nAlternate to https://github.com/facebook/react/pull/25334 without any prod runtime changes i.e. the proposed codemod in https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md#deprecate-string-refs-and-remove-production-mode-_owner-field would not work.\r\n\r\n## How did you test this change?\r\n\r\n- [x] CI\r\n- [x] `yarn test` with and without `warnAboutStringRefs` \r\n",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25383/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25383/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25379",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25379/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25379/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25379/events",
"html_url": "https://github.com/facebook/react/issues/25379",
"id": 1393633204,
"node_id": "I_kwDOAJy2Ks5TESe0",
"number": 25379,
"title": "eslint-plugin-react-hooks: lint rule to enforce that `useMemo` returns a value",
"user": {
  "login": "JoshuaKGoldberg",
  "id": 3335181,
  "node_id": "MDQ6VXNlcjMzMzUxODE=",
  "avatar_url": "https://avatars.githubusercontent.com/u/3335181?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/JoshuaKGoldberg",
  "html_url": "https://github.com/JoshuaKGoldberg",
  "followers_url": "https://api.github.com/users/JoshuaKGoldberg/followers",
  "following_url": "https://api.github.com/users/JoshuaKGoldberg/following{/other_user}",
  "gists_url": "https://api.github.com/users/JoshuaKGoldberg/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/JoshuaKGoldberg/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/JoshuaKGoldberg/subscriptions",
  "organizations_url": "https://api.github.com/users/JoshuaKGoldberg/orgs",
  "repos_url": "https://api.github.com/users/JoshuaKGoldberg/repos",
  "events_url": "https://api.github.com/users/JoshuaKGoldberg/events{/privacy}",
  "received_events_url": "https://api.github.com/users/JoshuaKGoldberg/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 121709921,
    "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
    "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
    "name": "Type: Feature Request",
    "color": "c7def8",
    "default": false,
    "description": null
  },
  {
    "id": 1249821345,
    "node_id": "MDU6TGFiZWwxMjQ5ODIxMzQ1",
    "url": "https://api.github.com/repos/facebook/react/labels/Component:%20ESLint%20Rules",
    "name": "Component: ESLint Rules",
    "color": "f7afdb",
    "default": false,
    "description": ""
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 3,
"created_at": "2022-10-02T04:01:58Z",
"updated_at": "2022-10-02T12:44:52Z",
"closed_at": null,
"author_association": "NONE",
"active_lock_reason": null,
"body": "Nothing prevents developers from calling `useMemo` without a `return`:\r\n\r\n```ts\r\nimport { useMemo } from \"react\";\r\n\r\nuseMemo(() => {\r\n    console.log(\"Yippee!\");\r\n}, []);\r\n```\r\n\r\n[[TypeScript playground showing no errors](https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAbzgVwM4FMCy6QTgXzgDMoIQ4AiKdAQwGMYKBuAWACh20scIAKXgJRwAvAD5E7OFLh0IAO1QQANugB0SiAHNeFAJrAwYdOgCEFAazb4ANHADaAXQtA)]\r\n\r\nCalling `useMemo` without a returned value is somewhat equivalent to calling `useEffect` without a returned value. Judging by the few times I've seen it happen, it's likely a case of a developer either confusing the two hooks or forgetting to `return` the memoized value.\r\n\r\nSuggestion: can we add a lint rule to flag `useMemo` calls that don't definitely return a value? It could have a _suggestion_ fixer to switch to `useEffect`.",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25379/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25379/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25376",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25376/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25376/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25376/events",
"html_url": "https://github.com/facebook/react/pull/25376",
"id": 1393280627,
"node_id": "PR_kwDOAJy2Ks4_-5ZR",
"number": 25376,
"title": "ReactDOM:-Added test to find rendered component with the type in document",
"user": {
  "login": "Biki-das",
  "id": 72331432,
  "node_id": "MDQ6VXNlcjcyMzMxNDMy",
  "avatar_url": "https://avatars.githubusercontent.com/u/72331432?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/Biki-das",
  "html_url": "https://github.com/Biki-das",
  "followers_url": "https://api.github.com/users/Biki-das/followers",
  "following_url": "https://api.github.com/users/Biki-das/following{/other_user}",
  "gists_url": "https://api.github.com/users/Biki-das/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/Biki-das/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/Biki-das/subscriptions",
  "organizations_url": "https://api.github.com/users/Biki-das/orgs",
  "repos_url": "https://api.github.com/users/Biki-das/repos",
  "events_url": "https://api.github.com/users/Biki-das/events{/privacy}",
  "received_events_url": "https://api.github.com/users/Biki-das/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 196858374,
    "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
    "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
    "name": "CLA Signed",
    "color": "e7e7e7",
    "default": false,
    "description": null
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 1,
"created_at": "2022-10-01T07:10:24Z",
"updated_at": "2022-10-01T07:16:10Z",
"closed_at": null,
"author_association": "CONTRIBUTOR",
"active_lock_reason": null,
"draft": false,
"pull_request": {
  "url": "https://api.github.com/repos/facebook/react/pulls/25376",
  "html_url": "https://github.com/facebook/react/pull/25376",
  "diff_url": "https://github.com/facebook/react/pull/25376.diff",
  "patch_url": "https://github.com/facebook/react/pull/25376.patch",
  "merged_at": null
},
"body": "\r\nAdded a small test to the reactdom, which test to find the rendered component with the type in document\r\n\r\n![Windows PowerShell 4_13_2022 11_35_30 PM](https://user-images.githubusercontent.com/72331432/193397671-adc50468-8285-4c0d-b954-3e844730f1a5.png)\r\n\r\n",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25376/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25376/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25367",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25367/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25367/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25367/events",
"html_url": "https://github.com/facebook/react/issues/25367",
"id": 1392629409,
"node_id": "I_kwDOAJy2Ks5TAdah",
"number": 25367,
"title": "[DevTools Bug]: DevTools causes hook callback behavior inconstency",
"user": {
  "login": "nhusher",
  "id": 376978,
  "node_id": "MDQ6VXNlcjM3Njk3OA==",
  "avatar_url": "https://avatars.githubusercontent.com/u/376978?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/nhusher",
  "html_url": "https://github.com/nhusher",
  "followers_url": "https://api.github.com/users/nhusher/followers",
  "following_url": "https://api.github.com/users/nhusher/following{/other_user}",
  "gists_url": "https://api.github.com/users/nhusher/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/nhusher/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/nhusher/subscriptions",
  "organizations_url": "https://api.github.com/users/nhusher/orgs",
  "repos_url": "https://api.github.com/users/nhusher/repos",
  "events_url": "https://api.github.com/users/nhusher/events{/privacy}",
  "received_events_url": "https://api.github.com/users/nhusher/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 40929151,
    "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
    "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
    "name": "Type: Bug",
    "color": "b60205",
    "default": false,
    "description": null
  },
  {
    "id": 155984160,
    "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
    "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
    "name": "Status: Unconfirmed",
    "color": "d4c5f9",
    "default": false,
    "description": "A potential issue that we haven't yet confirmed as a bug"
  },
  {
    "id": 710573595,
    "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
    "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
    "name": "Component: Developer Tools",
    "color": "fbca04",
    "default": false,
    "description": null
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 0,
"created_at": "2022-09-30T15:42:26Z",
"updated_at": "2022-09-30T15:42:26Z",
"closed_at": null,
"author_association": "NONE",
"active_lock_reason": null,
"body": "### Website or app\n\nhttps://gist.github.com/nhusher/33981014bb69318ead012c11a73eff52\n\n### Repro steps\n\nEither clone the gist and run with static-server, or check out [this equivalent codesandbox link](https://5lu8ks.csb.app/) (Full sandbox IDE [here](https://codesandbox.io/s/new-snowflake-5lu8ks?file=/src/index.tsx))\r\n\r\n1. Have React devtools installed \r\n2. Visit the URL indicated by static-server\r\n3. Click both increment buttons, ensuring that they work\r\n4. Open the developer tools\r\n5. Navigate to the DevTools Component tree and highlight `<App />`\r\n6. Click both the increment buttons\r\n7. Observe that the normal in-React increment button works\r\n8. Observe that the \"increment (outside react)\" button no longer works\r\n\r\nVerification of the issue:\r\n\r\n1. Open an incognito window\r\n2. Visit the URL indicated by static-server\r\n3. Click the two buttons and verify that both work\r\n4. Open the developer tools (no React Devtools available)\r\n5. Verify the two buttons continue to work\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25367/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25367/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25360",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25360/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25360/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25360/events",
"html_url": "https://github.com/facebook/react/pull/25360",
"id": 1391516139,
"node_id": "PR_kwDOAJy2Ks4_4-ql",
"number": 25360,
"title": "Add no-nested-components ESLint rule",
"user": {
  "login": "eps1lon",
  "id": 12292047,
  "node_id": "MDQ6VXNlcjEyMjkyMDQ3",
  "avatar_url": "https://avatars.githubusercontent.com/u/12292047?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/eps1lon",
  "html_url": "https://github.com/eps1lon",
  "followers_url": "https://api.github.com/users/eps1lon/followers",
  "following_url": "https://api.github.com/users/eps1lon/following{/other_user}",
  "gists_url": "https://api.github.com/users/eps1lon/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/eps1lon/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/eps1lon/subscriptions",
  "organizations_url": "https://api.github.com/users/eps1lon/orgs",
  "repos_url": "https://api.github.com/users/eps1lon/repos",
  "events_url": "https://api.github.com/users/eps1lon/events{/privacy}",
  "received_events_url": "https://api.github.com/users/eps1lon/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 196858374,
    "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
    "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
    "name": "CLA Signed",
    "color": "e7e7e7",
    "default": false,
    "description": null
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 4,
"created_at": "2022-09-29T21:19:33Z",
"updated_at": "2022-10-03T16:55:23Z",
"closed_at": null,
"author_association": "COLLABORATOR",
"active_lock_reason": null,
"draft": false,
"pull_request": {
  "url": "https://api.github.com/repos/facebook/react/pulls/25360",
  "html_url": "https://github.com/facebook/react/pull/25360",
  "diff_url": "https://github.com/facebook/react/pull/25360.diff",
  "patch_url": "https://github.com/facebook/react/pull/25360.patch",
  "merged_at": null
},
"body": "## Summary\r\n\r\nAdds a new `no-nested-components` rule to `eslint-plugin-react-hooks` that triggers on nested component declarations e.g.\r\n\r\n```jsx\r\nfunction Component() {\r\n  const Nested = () => <div />;\r\n  // ^^^^^^^^^^^^^^^^^^^^^^^^^^^ \r\n  // Component \"Nested\" is declared during render. \r\n  // You should move this declaration outside of render to ensure this component's state is persisted across re-renders of its parent. \r\n  // If this is not a component, or not inside a component or hook, rename it to make sure it is not mistaken for a component e.g. `Icon` -> `renderIcon`.\r\n\r\n  return <Nested />\r\n}\r\n```\r\n\r\n\r\n\r\nThese declarations are problematic since the nested components will not persist state across re-renders of the parent component.\r\n\r\nThe [tests are copied from `react/no-nested-unstable-components`](https://github.com/jsx-eslint/eslint-plugin-react/blob/master/tests/lib/rules/no-unstable-nested-components.js) but re-ordered since we currently apply the same logic as rules-of-hooks: If it looks like a component and is inside a component or hooks it cannot be nested inside another component.\r\n\r\nUnlike `react/no-nested-unstable-components` we currently don't detect nested component definitions in class components nor do we detect nested class component definitions. Both of these scenarios would be nice to cover as well though!\r\n\r\nOpen questions: \r\n- [ ] releaseable? should more cases be covered? better package (name)?\r\n- [ ] rule name bikeshedding\r\n- [ ] internal: inline helpers from RulesOfHooks or created shared helpers?\r\n- [ ] How do we communicate forking of lint rules? What happens in code bases with both `react/no-unstable-nested-components` and `react-hooks/no-nested-components`?\r\n\r\n## How did you test this change?\r\n\r\n- [x] CI\r\n- [x] [mui/mui](https://github.com/mui/material-ui/)\r\n- [x] Klarna monorepo\r\n- [x] [@AriPerkkio ran it on 20k OSS repos](https://github.com/facebook/react/pull/25360#pullrequestreview-1127521790) One false-positive could be caught before release. The other patterns are consistent with rules-of-hooks\r\n\r\n## Why not recommend `react/no-nested-unstable-components`\r\n\r\n- [Questionable if this rule will be part of the recommended ruleset in a timely manner.](https://github.com/jsx-eslint/eslint-plugin-react/pull/3444)\r\n- Consistent detection of what's considered a component (e.g. we can detect nested forwardRef or memo component declarations )\r\n- `no-unstable-nested-components` is not actually what we want. It's just about nesting components. Memoizing them will still cause breakage since their state won't be re-useable (remember that useMemo/useCallback are perf optimizations not semantic guarantees unlike `key` and component types)\r\n\r\n###  Not detected in proposed rule but detected in `react/no-unstable-nested-components`\r\n\r\nA. `<Component footer={() => <div />} />`\r\n\r\nThis is probably correct to no longer detect since `const footer = () => <div />} />` would also not be considered a component. However, `<Component Footer={() => <div />} />` would also not be detected. This would probably be nice to get into Rules of Hooks regardless.\r\n\r\n\r\n### Detected in proposed rule but not detected in `react/no-unstable-nested-components`\r\n\r\nA.\r\n```jsx\r\nfunction useHook() {\r\n   return function Component() {}\r\n}\r\n```\r\nIntended. Hooks are called during render which means the component declaration happens during render.\r\n\r\nB.\r\n```jsx\r\nfunction Component() {\r\n   const ConditionalWrapper = ({ condition, wrapper, children }: any) =>\r\n      condition ? wrapper(children) : children\r\n}\r\n```\r\nIntended. Rules of Hooks would allow calling a Hook in `ConditionalWrapper` so we should consider it a nested declaration.\r\n\r\nC.\r\n\r\n```jsx\r\nfunction Component() {\r\n  const components = {\r\n    ActionIcon: () => null,\r\n  }\r\n}\r\n```\r\n\r\nIntended. Even though flagging this particular example seems silly, Rules of Hooks would allow calling a Hook in `ActionIcon` so we should consider it a nested declaration.",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25360/reactions",
  "total_count": 5,
  "+1": 4,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 1,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25360/timeline",
"performed_via_github_app": null,
"state_reason": null
},
{
"url": "https://api.github.com/repos/facebook/react/issues/25357",
"repository_url": "https://api.github.com/repos/facebook/react",
"labels_url": "https://api.github.com/repos/facebook/react/issues/25357/labels{/name}",
"comments_url": "https://api.github.com/repos/facebook/react/issues/25357/comments",
"events_url": "https://api.github.com/repos/facebook/react/issues/25357/events",
"html_url": "https://github.com/facebook/react/pull/25357",
"id": 1391193127,
"node_id": "PR_kwDOAJy2Ks4_35ld",
"number": 25357,
"title": "Patch EventTarget.prototype.dispatchEvent",
"user": {
  "login": "tyao1",
  "id": 5868353,
  "node_id": "MDQ6VXNlcjU4NjgzNTM=",
  "avatar_url": "https://avatars.githubusercontent.com/u/5868353?v=4",
  "gravatar_id": "",
  "url": "https://api.github.com/users/tyao1",
  "html_url": "https://github.com/tyao1",
  "followers_url": "https://api.github.com/users/tyao1/followers",
  "following_url": "https://api.github.com/users/tyao1/following{/other_user}",
  "gists_url": "https://api.github.com/users/tyao1/gists{/gist_id}",
  "starred_url": "https://api.github.com/users/tyao1/starred{/owner}{/repo}",
  "subscriptions_url": "https://api.github.com/users/tyao1/subscriptions",
  "organizations_url": "https://api.github.com/users/tyao1/orgs",
  "repos_url": "https://api.github.com/users/tyao1/repos",
  "events_url": "https://api.github.com/users/tyao1/events{/privacy}",
  "received_events_url": "https://api.github.com/users/tyao1/received_events",
  "type": "User",
  "site_admin": false
},
"labels": [
  {
    "id": 196858374,
    "node_id": "MDU6TGFiZWwxOTY4NTgzNzQ=",
    "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
    "name": "CLA Signed",
    "color": "e7e7e7",
    "default": false,
    "description": null
  }
],
"state": "open",
"locked": false,
"assignee": null,
"assignees": [

],
"milestone": null,
"comments": 1,
"created_at": "2022-09-29T16:58:33Z",
"updated_at": "2022-09-29T21:31:24Z",
"closed_at": null,
"author_association": "CONTRIBUTOR",
"active_lock_reason": null,
"draft": false,
"pull_request": {
  "url": "https://api.github.com/repos/facebook/react/pulls/25357",
  "html_url": "https://github.com/facebook/react/pull/25357",
  "diff_url": "https://github.com/facebook/react/pull/25357.diff",
  "patch_url": "https://github.com/facebook/react/pull/25357.patch",
  "merged_at": null
},
"body": "<!--\r\n  Thanks for submitting a pull request!\r\n  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.\r\n\r\n  Before submitting a pull request, please make sure the following is done:\r\n\r\n  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `main`.\r\n  2. Run `yarn` in the repository root.\r\n  3. If you've fixed a bug or added code that should be tested, add tests!\r\n  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.\r\n  5. Run `yarn test --prod` to test in the production environment. It supports the same options as `yarn test`.\r\n  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press \"Inspect\".\r\n  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).\r\n  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.\r\n  9. Run the [Flow](https://flowtype.org/) type checks (`yarn flow`).\r\n  10. If you haven't already, complete the CLA.\r\n\r\n  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html\r\n-->\r\n\r\n## Summary\r\n\r\n<!--\r\n Explain the **motivation** for making this change. What existing problem does the pull request solve?\r\n-->\r\nAdds a function to patch EventTarget.prototype.dispatchEvent so that custom events inherit the priority of the outer event type. It's done by setting a `eventPriorityOverride` variable in the patched method, then `getEventPriority` can use that.\r\n\r\n\r\n## How did you test this change?\r\n\r\n<!--\r\n  Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface.\r\n  How exactly did you verify that your PR solves the issue you wanted to solve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\r\n`yarn test `monkeypatchDispatchEvent-test``\r\n",
"reactions": {
  "url": "https://api.github.com/repos/facebook/react/issues/25357/reactions",
  "total_count": 0,
  "+1": 0,
  "-1": 0,
  "laugh": 0,
  "hooray": 0,
  "confused": 0,
  "heart": 0,
  "rocket": 0,
  "eyes": 0
},
"timeline_url": "https://api.github.com/repos/facebook/react/issues/25357/timeline",
"performed_via_github_app": null,
"state_reason": null
}
]